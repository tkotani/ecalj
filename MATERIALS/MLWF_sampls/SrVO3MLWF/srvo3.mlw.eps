%!PS-Adobe-2.0 EPSF-2.0
%%Title: bandlanio3c.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Jul  2 15:39:30 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bandlanio3c.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (takao)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul  2 15:39:30 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
630 280 M
6317 0 V
stroke
LTb
630 280 M
63 0 V
6254 0 R
-63 0 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 697 M
6317 0 V
stroke
LTb
630 697 M
63 0 V
6254 0 R
-63 0 V
stroke
546 697 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.04)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 1115 M
6317 0 V
stroke
LTb
630 1115 M
63 0 V
6254 0 R
-63 0 V
stroke
546 1115 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 1532 M
6317 0 V
stroke
LTb
630 1532 M
63 0 V
6254 0 R
-63 0 V
stroke
546 1532 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.08)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 1949 M
6317 0 V
stroke
LTb
630 1949 M
63 0 V
6254 0 R
-63 0 V
stroke
546 1949 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 2367 M
6317 0 V
stroke
LTb
630 2367 M
63 0 V
6254 0 R
-63 0 V
stroke
546 2367 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.12)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 2784 M
6317 0 V
stroke
LTb
630 2784 M
63 0 V
6254 0 R
-63 0 V
stroke
546 2784 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.14)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 3202 M
6317 0 V
stroke
LTb
630 3202 M
63 0 V
6254 0 R
-63 0 V
stroke
546 3202 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.16)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 3619 M
6317 0 V
stroke
LTb
630 3619 M
63 0 V
6254 0 R
-63 0 V
stroke
546 3619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.18)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 4036 M
6317 0 V
stroke
LTb
630 4036 M
63 0 V
6254 0 R
-63 0 V
stroke
546 4036 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 4454 M
3818 0 V
2415 0 R
84 0 V
stroke
LTb
630 4454 M
63 0 V
6254 0 R
-63 0 V
stroke
546 4454 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.22)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 4871 M
6317 0 V
stroke
LTb
630 4871 M
63 0 V
6254 0 R
-63 0 V
stroke
546 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.24)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 280 M
0 4591 V
stroke
LTb
630 280 M
0 63 V
0 4528 R
0 -63 V
stroke
630 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1262 280 M
0 4591 V
stroke
LTb
1262 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1262 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1893 280 M
0 4591 V
stroke
LTb
1893 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1893 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2525 280 M
0 4591 V
stroke
LTb
2525 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2525 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3157 280 M
0 4591 V
stroke
LTb
3157 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3157 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3789 280 M
0 4591 V
stroke
LTb
3789 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3789 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4420 280 M
0 4591 V
stroke
LTb
4420 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4420 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5052 280 M
0 4108 V
0 420 R
0 63 V
stroke
LTb
5052 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5052 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5684 280 M
0 4108 V
0 420 R
0 63 V
stroke
LTb
5684 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5684 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6315 280 M
0 4108 V
0 420 R
0 63 V
stroke
LTb
6315 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6315 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6947 280 M
0 4591 V
stroke
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
630 4871 N
630 280 L
6317 0 V
0 4591 V
-6317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4738 M
('dat1' using \($0\):\($2\)) Rshow
LT0
6380 4738 M
399 0 V
693 741 M
63 -45 V
64 45 V
63 61 V
63 -5 V
63 -84 V
63 -102 V
63 -59 V
64 1 V
126 44 R
126 50 R
127 30 R
126 2 R
126 -21 R
127 -36 R
126 -40 R
126 -30 R
127 -12 R
126 2 R
63 6 V
63 8 V
63 0 V
64 16 V
63 67 V
63 124 V
63 172 V
63 195 V
63 200 V
64 205 V
63 221 V
63 232 V
63 225 V
63 208 V
63 195 V
64 196 V
63 191 V
63 168 V
63 127 V
63 88 V
64 66 V
63 58 V
63 46 V
63 0 V
63 5 V
63 13 V
64 21 V
63 29 V
63 37 V
63 44 V
63 51 V
63 59 V
64 69 V
63 76 V
63 72 V
63 72 V
63 72 V
63 70 V
64 65 V
63 47 V
63 41 V
63 36 V
63 30 V
63 22 V
64 0 V
63 -43 V
63 -73 V
63 -98 V
63 -112 V
63 -150 V
64 -196 V
63 -217 V
63 -235 V
63 -251 V
63 -268 V
63 -284 V
64 -289 V
63 -287 V
63 -279 V
63 -267 V
63 -254 V
63 -242 V
64 -206 V
63 -135 V
63 -45 V
693 741 Pls
756 696 Pls
820 741 Pls
883 802 Pls
946 797 Pls
1009 713 Pls
1072 611 Pls
1135 552 Pls
1199 553 Pls
1325 597 Pls
1451 647 Pls
1578 677 Pls
1704 679 Pls
1830 658 Pls
1957 622 Pls
2083 582 Pls
2209 552 Pls
2336 540 Pls
2462 542 Pls
2525 548 Pls
2588 556 Pls
2651 556 Pls
2715 572 Pls
2778 639 Pls
2841 763 Pls
2904 935 Pls
2967 1130 Pls
3030 1330 Pls
3094 1535 Pls
3157 1756 Pls
3220 1988 Pls
3283 2213 Pls
3346 2421 Pls
3409 2616 Pls
3473 2812 Pls
3536 3003 Pls
3599 3171 Pls
3662 3298 Pls
3725 3386 Pls
3789 3452 Pls
3852 3510 Pls
3915 3556 Pls
3978 3556 Pls
4041 3561 Pls
4104 3574 Pls
4168 3595 Pls
4231 3624 Pls
4294 3661 Pls
4357 3705 Pls
4420 3756 Pls
4483 3815 Pls
4547 3884 Pls
4610 3960 Pls
4673 4032 Pls
4736 4104 Pls
4799 4176 Pls
4862 4246 Pls
4926 4311 Pls
4989 4358 Pls
5052 4399 Pls
5115 4435 Pls
5178 4465 Pls
5241 4487 Pls
5305 4487 Pls
5368 4444 Pls
5431 4371 Pls
5494 4273 Pls
5557 4161 Pls
5620 4011 Pls
5684 3815 Pls
5747 3598 Pls
5810 3363 Pls
5873 3112 Pls
5936 2844 Pls
5999 2560 Pls
6063 2271 Pls
6126 1984 Pls
6189 1705 Pls
6252 1438 Pls
6315 1184 Pls
6378 942 Pls
6442 736 Pls
6505 601 Pls
6568 556 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4598 M
('dat2' using \($0\):\($2\)) Rshow
LT1
630 3591 Crs
756 3575 Crs
820 3519 Crs
883 3388 Crs
946 3286 Crs
1009 3234 Crs
1072 3084 Crs
1135 2914 Crs
1199 2726 Crs
1262 2525 Crs
1325 2313 Crs
1388 2047 Crs
1451 1804 Crs
1514 1582 Crs
1578 1377 Crs
1641 1185 Crs
1704 982 Crs
1767 807 Crs
1830 671 Crs
1957 585 Crs
2083 556 Crs
2209 556 Crs
2336 594 Crs
2462 701 Crs
2588 857 Crs
2715 1048 Crs
2841 1268 Crs
2967 1511 Crs
3094 1759 Crs
3157 1997 Crs
3220 2220 Crs
3283 2433 Crs
3346 2640 Crs
3409 2834 Crs
3473 3004 Crs
3536 3147 Crs
3599 3270 Crs
3662 3378 Crs
3725 3467 Crs
3789 3529 Crs
3852 3561 Crs
3915 3556 Crs
3978 3556 Crs
4041 3562 Crs
4104 3575 Crs
4168 3597 Crs
4231 3626 Crs
4294 3661 Crs
4357 3708 Crs
4420 3762 Crs
4483 3823 Crs
4547 3890 Crs
4610 3960 Crs
4673 4040 Crs
4736 4119 Crs
4799 4193 Crs
4862 4258 Crs
4926 4311 Crs
4989 4370 Crs
5052 4420 Crs
5115 4458 Crs
5178 4480 Crs
5241 4487 Crs
5305 4487 Crs
5368 4464 Crs
5431 4409 Crs
5494 4330 Crs
5557 4211 Crs
5620 4063 Crs
5684 3881 Crs
5747 3685 Crs
5810 3470 Crs
5873 3235 Crs
5936 2982 Crs
5999 2718 Crs
6063 2447 Crs
6126 2170 Crs
6189 1888 Crs
6252 1602 Crs
6315 1315 Crs
6378 1040 Crs
6442 795 Crs
6505 619 Crs
6568 556 Crs
6579 4598 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4458 M
('dat3' u \($0\):\($2\)) Rshow
LT2
693 3591 Star
756 3621 Star
883 3542 Star
946 3462 Star
1009 3361 Star
1072 3234 Star
1135 3176 Star
1199 3052 Star
1262 2849 Star
1325 2590 Star
1388 2313 Star
1451 2093 Star
1514 1866 Star
1578 1635 Star
1641 1406 Star
1704 1185 Star
1767 1002 Star
1830 832 Star
1893 689 Star
1957 594 Star
2020 556 Star
2083 556 Star
2146 620 Star
2209 784 Star
2272 1010 Star
2336 1262 Star
2399 1525 Star
2462 1791 Star
2525 2056 Star
2651 2312 Star
2778 2557 Star
2904 2793 Star
3030 3022 Star
3157 3238 Star
3283 3432 Star
3409 3602 Star
3536 3752 Star
3662 3887 Star
3789 4004 Star
3852 4087 Star
3915 4127 Star
3978 4127 Star
4041 4127 Star
4104 4128 Star
4168 4132 Star
4231 4141 Star
4294 4156 Star
4357 4176 Star
4420 4200 Star
4483 4227 Star
4547 4253 Star
4610 4277 Star
4673 4299 Star
4736 4320 Star
4799 4341 Star
4862 4366 Star
4926 4397 Star
4989 4430 Star
5052 4461 Star
5115 4483 Star
5178 4496 Star
5241 4497 Star
5305 4487 Star
5368 4487 Star
5431 4498 Star
5494 4463 Star
5557 4373 Star
5620 4233 Star
5684 4063 Star
5747 3893 Star
5810 3699 Star
5873 3480 Star
5936 3238 Star
5999 2982 Star
6063 2722 Star
6126 2452 Star
6189 2173 Star
6252 1889 Star
6315 1602 Star
6378 1316 Star
6442 1042 Star
6505 800 Star
6568 625 Star
6631 556 Star
6579 4458 Star
% End plot #3
1.000 UL
LTb
630 4871 N
630 280 L
6317 0 V
0 4591 V
-6317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

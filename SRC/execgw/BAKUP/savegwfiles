#! /bin/csh

set filel = 'GWinput switches-for-lm ctrl.preprocessed.ext QPU QPD TOTE.UP TOTE2.UP TOTE.DN TOTE2.DN sigm dat dat2'
set bigfilel = 'ctrl.ext rst.ext syml.ext lqg4gw llmfgw00 llmfgw01 llmf2gw lrdata4gw leftet lchknw lbasC lvccC lsxC lbas lvcc lqpe lx0 lsx lsc SYMOPS QIBZ QPNT NLAindx LATTC CLASS hbe.d NQIBZ LMTO EVU EVD ECORE NW EFERMI EFERMI.check EFERMI.QP EFERMI.QPz=1 SEXcoreU SEXcoreD SEXU SEXD XCU XCD WV.d DOSACC.lda DOSACC2.lda SECU SECD dat'

while (`echo $1 | sed -e 's/\(.\).*/\1/' `  ==  "-")
  set arg1 = ($1); shift

  switch ("$arg1")

    case "--help":
    case "--h":
      goto usage

    case "--job=*":
      set job
      set jobcommand= (`echo "$arg1" | sed s/--job=//`)
      breaksw

    case "--sc":
      set sc
      breaksw

    case "--big":
      set big
      breaksw

    case "--mkdir"
      set makdir
      breaksw

    default:
      echo "unrecognized switch '$arg1' ... aborting"
      goto usage

  endsw

end

if ($#argv < 2) goto usage
set ext = $1
shift
set directory = $1
if ($#argv >1 ) then
  shift
  echo 'savegw (abort) : too many arguments ... trailing ' $argv
  goto usage
endif
if (! -e ctrl.$ext) then
  echo "savegw (warning) : no file ctrl.$ext"
endif

if ($?makdir) then
  if (! -e $directory) then
    echo savegw : mkdir -p $directory
                  mkdir -p $directory
  endif
endif

if (! -d $directory) then
  echo "savegw (abort) : no directory $directory"
  goto usage
endif
if (! -r $directory) then
  echo "savegw (abort) : directory $directory not readable"
  exit -1
endif

if ($?job) then
  set filel = (job $filel)
endif
set files = ($filel)
if ($?big) then
  set files = ($filel $bigfilel)
endif

# do the copy for each file
set copied
foreach i ($files)

# copy generic .ext to $ext
  if ($i:e == "ext") then
    set i = $i:r.$ext
  endif

  if (-e $i) then
    set copied = ($copied $i)

    if ($i == "lx0") then
      grep -vE 'end Cpu|begin Cpu|elements Cpu|cycle Cpu|begin x0kf|begin dispersion' lx0  >$directory/lx0

    else if ($i == "lsx") then
      grep -v 'irot' lsx  >$directory/lsx

    else
     cp -p $i $directory
    endif

  else if ($i == "job") then
    echo $jobcommand >$directory/job
    set copied = ($copied $i)
  endif
end

echo "savegw: the following files were copied to $directory"
echo "$copied"

exit
usage:
echo 'usage : savegwfiles [--switches] ext directory'
echo '        Saves subset of GW output to directory'
echo ' '
echo  '       savegw copies any of the following files that exist'
echo  '         GWinput switches-for-lm ctrl.preprocessed.ext sigm'
echo  '         QPU QPD TOTE.UP TOTE2.UP TOTE.DN TOTE2.DN dat'
echo  '       and creates job file with contents of --job=, if specified'
echo ' '
echo '        switches:'
echo '          --help'
echo '          --h'
echo '            show this message'
echo ' '
echo '          --mkdir'
echo  '             if directory does not exist, create it first'
echo ' '
echo '          --job='
echo '              create file "job" with contents of this string'
echo ' '
echo '          --big'
echo '              also copies files'
echo '                 ctrl.ext rst.ext syml.ext'
echo '                 lqg4gw llmfgw00 llmfgw01 llmf2gw lrdata4gw'
echo '                 leftet lchknw lbasC lvccC lsxC lbas lvcc lqpe lx0 lsx lsc'
echo '                 SYMOPS QIBZ NLAindx LATTC CLASS hbe.d NQIBZ LMTO EVU EVD ECORE'
echo '                 NW EFERMI SEXcoreU SEXcoreD SEXU SEXD WV.d DOSACC.lda DOSACC2.lda '
echo '                 SECU SECD QPU QPD dat'

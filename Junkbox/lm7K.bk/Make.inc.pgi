FC  = mpif90
LK  = mpif90

FFLAGS_COMMON= -Mextend $(CPP_SW) $(module)
FFLAGS = -O1 $(FFLAGS_COMMON)
FFLAGS_LESS  = -O1 $(FFLAGS_COMMON)
FFLAGS_LESS2 = -O1 $(FFLAGS_COMMON)
FFLAGS_LESS3 = -O0 $(FFLAGS_COMMON)
FFLAGS_NONE  = -O0 $(FFLAGS_COMMON)
FLAGS_LESS67 = -O0 $(FFLAGS_COMMON)

# safer option (debug)
#  -pg for profiling??? how to use gprof
#FFLAGS =      -g  -fbacktrace $(FFLAGS_COMMON)
#FFLAGS_LESS = -g  -fbacktrace $(FFLAGS_COMMON)
#FFLAGS_LESS2 = -g  -fbacktrace $(FFLAGS_COMMON)
#FFLAGS_LESS3 = -g  -fbacktrace $(FFLAGS_COMMON)
#FFLAGS_NONE = -g  -fbacktrace $(FFLAGS_COMMON)


##### MATH libraries FFTW,BLAS LAPACK ###
# ubuntu 11.10 apt-get install libfftw-dev liblapack-dev libblas-dev
#LIBMATH= /usr/lib/libfftw3.so.3 
#LIBLOC=/usr/lib/x86_64-linux-gnu/libfftw3.so.3 /usr/lib/liblapack.so.3gf /usr/lib/libblas.so.3gf 

LIBLOC = ${LIBMATH}



#############################################################
#####   you usually don't need to touch followings      #####
#############################################################
result_fc_version =$(shell tail -1 .fc_version | tr ' ' '-' )

make_fc_version:
	rm -f .fc_versionM
	-export LANG=C; ${FC} -v> .fc_version

# where is modules?
moddir = MODDIR/$(obj_path)
module = -module $(moddir)

##############################################
# CPP switches (instead of old ccomp procedure
###################################################
CPP_SW = -DDOUBLEBACKSLASH -DHASIARGC  -DHASGETARG  -DFDATE  -DHASCPUTIME -DHASGETENVIRONMENTVARIABLE  -DNOQUAD  -DNOT_OVERLAP_VAR 


##### Patch section #######################################3
### ... patch section for ./slatsm/slatsm.a
$(sla_obj_path)/huntx.o:slatsm/huntx.F
	$(FC) $(FFLAGS_LESS3) -c $< -o $@
 
$(sla_obj_path)/hunti.o: slatsm/hunti.F
	$(FC) $(FFLAGS_LESS3) -c $< -o $@
 
$(sla_obj_path)/polcof.o: slatsm/polcof.F
	$(FC) $(FFLAGS_LESS3) -c $< -o $@
 
$(sla_obj_path)/rdfiln.o: slatsm/rdfiln.F
	$(FC) $(FFLAGS_LESS3) -c $< -o $@
##### patch section for ./subs/subs.a
$(subs_obj_path)/ropbes.o: subs/ropbes.F
	$(FC) $(FFLAGS_LESS3) -c $< -o $@
 
$(subs_obj_path)/ropyln.o: subs/ropyln.F
	$(FC) $(FFLAGS_LESS3) -c $< -o $@
 
$(subs_obj_path)/spcgrp.o  : subs/spcgrp.F $(moddir)/m_globalvariables.mod 
	$(FC) $(FFLAGS_LESS) -c $< -o $@
### these modules requies no optimization ---> safer.
#$(subs_obj_path)/m_toksw.o $(moddir)/m_toksw.mod $(moddir)/m_gtv.mod  : subs/m_toksw.F 
#$(subs_obj_path)/m_rdctrl.o $(moddir)/m_rdctrl.mod  : subs/m_rdctrl.F $(moddir)/m_gtv.mod $(moddir)/m_struc_def.mod $(moddir)/m_toksw.mod 
#$(subs_obj_path)/m_rdctrlchk.o $(moddir)/m_rdctrlchk.mod  : subs/m_rdctrlchk.F $(moddir)/m_gtv.mod $(moddir)/m_toksw.mod 
#$(subs_obj_path)/m_struc_def.o $(moddir)/m_struc_def.mod  : subs/m_struc_def.F 
#$(subs_obj_path)/m_struc_func.o $(moddir)/m_struc_func.mod  : subs/m_struc_func.F 
 
$(subs_obj_path)/m_toksw.o  : subs/m_toksw.F 
	$(FC) $(FFLAGS_NONE) -c $< -o $(subs_obj_path)/m_toksw.o
$(subs_obj_path)/m_rdctrl.o : subs/m_rdctrl.F
	$(FC) $(FFLAGS_NONE) -c $< -o $(subs_obj_path)/m_rdctrl.o 
$(subs_obj_path)/m_rdctrlchk.o : subs/m_rdctrlchk.F $(subs_obj_path)/m_gtv.o $(subs_obj_path)/m_toksw.o 
	$(FC) $(FFLAGS_NONE) -c $< -o $(subs_obj_path)/m_rdctrlchk.o
$(subs_obj_path)/m_struc_def.o : subs/m_struc_def.F 
	$(FC) $(FFLAGS_NONE) -c $< -o $(subs_obj_path)/m_struc_def.o
$(subs_obj_path)/m_struc_func.o : subs/m_struc_func.F 
	$(FC) $(FFLAGS_NONE) -c $< -o $(subs_obj_path)/m_struc_func.o
$(fp_obj_path)/rhogkl.o  : fp/rhogkl.F 
	$(FC) $(FFLAGS_LESS) -c $< -o $@


################################################
# archiver (maybe fixed).
################################################
AR := ar
ARFLAGS := rv
RANLIB := ranlib
################################################
# program and libraries (choose one of sections; normal, MPI, or MPIK)
################################################
programs = lmf lmfa lmfgw lmdos lmchk lmf2gw  rdcmd
SUBS   := libsubs.a
FP     := libfp.a
SLATSM := slatsm.a
##### MPIK case ##
#programs = lmf-MPIK lmfgw-MPIK
#SUBS   = libsubs-MPIK.a 
#FP     = libfp-MPIK.a
#SLATSM = slatsm-MPI.a  #slatsm-MPI = slatsm-MPIK

### path to libraries (fixed) #########
LIBSUBS := subs/$(SUBS)
LIBFP   := fp/$(FP)
LIBSLA  := slatsm/$(SLATSM)

subs/$(SUBS):$(subs_obj)
	$(AR) $(ARFLAGS) $@ $(subs_obj)
fp/$(FP): $(fp_obj)
	$(AR) $(ARFLAGS) $@ $(fp_obj)
slatsm/$(SLATSM): $(sla_obj)
	$(AR) $(ARFLAGS) $@ $(sla_obj)


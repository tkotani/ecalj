### I think that you don't needs to modify this file. ###
### This file is not machine-dependent. #####
### Machine dependence in make.inc


# ---- Machine-specific compiler flags ---
#include make.inc

### You need to set switches (1) to (6), by hand
###

#(1) Compilar ###################
# ... Fortran and linker switches for machine LINUX with intel fortran

#FC = ifort -132 -cm -w90 -w95
# FC= ifort -132 -check bobunds -traceback !for check array bound
#FC = f95 
FC = mpif90

# -cm is supress all comment.
# -w95 and -w90 is to remove noisy warning related to f90 and f95 recommendations.
# See http://www.intel.com/software/products/compilers/flin/docs/ug/msg_warn.htm


#(2) CPP SWITCHES ###################
CPPSWITCH_INTELLINUXIFC  = \
-DEXPAND_ISWAP  -DEXPAND_VDV   -DCOMMONLL  -UDUMMY_ETIME -DEXPAND_MELPLN2         \
-DUSE_X0KBLAS   -DX0KBLAS_DIV  -UEXPAND_SUBSTITUTION     -UCOMMENTOUTfor_PARALLEL \
-DMbytes_X0KBLAS_DIV=2        -DNWORD_RECORDSIZE=1     -DEXPAND_SORTEA

#CPPSWITCH_DECALPHA  = \
#-DEXPAND_ISWAP  -DEXPAND_VDV   -UCOMMONLL  -UDUMMY_ETIME -DEXPAND_MELPLN2         \
#-DUSE_X0KBLAS   -DX0KBLAS_DIV  -UEXPAND_SUBSTITUTION     -UCOMMENTOUTfor_PARALLEL \
#-DMbytes_X0KBLAS_DIV=2        -DNWORD_RECORDSIZE=4     -DEXPAND_SORTEA

#CPPSWITCH_SR8K = \
#-DEXPAND_ISWAP  -DEXPAND_VDV   -UCOMMONLL  -DDUMMY_ETIME  -DEXPAND_MELPLN2 \
#-DUSE_X0KBLAS   -DX0KBLAS_DIV  -UEXPAND_SUBSTITUTION      -DCOMMENTOUTfor_PARALLEL \
#-DMbytes_X0KBLAS_DIV=1024     -DNWORD_RECORDSIZE=1      -DEXPAND_SORTEA


#(3) Compilar options ###################
# 
### INTEL FORTRAN PENTIUM4 LINUX ###
#FFLAGS_c0 = -O0 -Vaxlib  -cpp $(CPPSWITCH_INTELLINUXIFC)
#FFLAGS    = -Vaxlib -tpp7 -cpp $(CPPSWITCH_INTELLINUXIFC)   # for .F
#FFLAGS=-O3 -cm -WB

#FFLAGS= -g $(CPPSWITCH_INTELLINUXIFC) -fomit-frame-pointer -funroll-loops  -ffast-math -ffixed-line-length-132


# Switch with -O3 caused a stop for gfortran in ubuntu9.10 ---I needed
# older verion OR no -Osomething options. (only for sxcf.*.F)
FFLAGS=  -O0  $(CPPSWITCH_INTELLINUXIFC) -fomit-frame-pointer -funroll-loops  -ffast-math -ffixed-line-length-132


#
### Don't change para_g = .F ... below (or modify it if you know how this work) 
#### don't need to read here #####NoteStart
# Some groups of .f sources are compiled into .c*_o files.  (* is 1 to 4).
# The compile options are in FFLAGS_c*. The others are with .F and FFLAGS. See makefile and Search para_g or so.
# ---> It cause a problem if a source file foo.f, which compiled into foo.c*_o contains USE module, 
#      because checkmodule does now just support *.F. In such a case, you have to modify checkmodule by yourself.
#      (This note is by takao. Oct.2003)
##################################NoteEnd
para_g = .F     # ppbafp.f  psi2bc1.f psi2bc.f See makefile.
sxcf_g = .F     # sxcf.f
x0kf_g = .F     # x0kf.f
hqpe_g = .F     # hqpe.f
tet5_g = .F


### alpha for older compaq compilar ###
#FFLAGS = -O4 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .F
#FFLAGS  = -K -O4 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .F
#para_g = .F     # ppbafp.f  psi2bc1.f psi2bc.f See makefile.
#sxcf_g = .F     # sxcf.f
#x0kf_g = .F     # x0kf.f
#hqpe_g = .F     # hqpe.f
#
#### alpha compaq compilar to override the compilar bug (rather the latest compiler requires this) #######################
#FFLAGS     = -O3 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .F
#FFLAGS_c1  = -O1 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .c1_o
#FFLAGS_c2  = 
#FFLAGS_c3  = 
#FFLAGS_c4  = -O4 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .c4_o
#para_g = .F        # ppbafp.f  psi2bc1.f psi2bc.f
#sxcf_g = .c4_o     # sxcf.f
#x0kf_g = .c4_o     # x0kf.f
#hqpe_g = .c1_o     # hqpe.f
#
#
### for sr8k ###
#FFLAGS    = -Oss -loglist -Xpcomp -limit -noparallel -Xparmonitor  -nosave -64  -cpp $(CPPSWITCH_SR8K)
#FFLAGS_c1 = -Oss -loglist -Xpcomp -limit -parallel -Xparmonitor -uinline=2 -nosave -64  -cpp  $(CPPSWITCH_SR8K)
## We devide .f souces to some groups, which are compiled with the same optins to the objects with the same extentions. 
#para_g = .c1_o  # ppbafp.f  psi2bc1.f psi2bc.f
#x0kf_g = .c1_o  # x0kf.f
#sxcf_g = .F     # sxcf.f
#hqpe_g = .F     # hqpe.f



#(4) BLAS + LAPACK ############
### ATLAS BLAS
#LIBMATH= $(ECAL)/BLASplusLAPACK/LAPACK_A/lapack_a.a \
#-L$(ECAL)/BLASplusLAPACK/ATLAS/ -llapack  -lcblas -lf77blas -latlas
#
### Goto's BLAS; faster than ATLAS.
#
### See http://www.cs.utexas.edu/users/flame/goto/
#LIBMATH= $(ECAL)/BLASplusLAPACK/LAPACK_A/lapack_a.a \
#$(ECAL)/BLASplusLAPACK/GotoBLAS/xerbla.F  $(ECAL)/BLASplusLAPACK/GotoBLAS/libgoto_p4_512-r0.6.so 
#
## This is for multi-threaded version of GotoBlas...
##$(ECAL)/BLASplusLAPACK/GotoBLAS/xerbla.F  $(ECAL)/BLASplusLAPACK/GotoBLAS/libgoto_p4_512p-r0.6.so 
#
### alpha
#LIBMATH=-lcxml #for alpha
#
#for henry.eas.asu.edu (Xeon cluster)

#LIBMATH= -lgoto -L/usr/local/lib/ATLAS/ -lf77blas -latlas -L/opt/intel/mkl/lib/32 -lmkl_lapack -lmkl_def -lguide -lsvml -lPEPCF90 $(ECAL)/BLASplusLAPACK/LAPACK_A/lapack_a.a 

# I had a problem in zgemm in pwmat. 
#LIBLOC= /opt/acml4.2.0/gfortran64/lib/libacml.a -lfftw3


# it caused segmentation fault during lmf. (just after BNDFP: started).
#LIBMATH= /opt/acml4.1.0/gfortran64/lib/libacml.a -lfftw3

# ubuntu 9.10
#LIBLOC= /usr/lib64/libfftw3.a /usr/lib64/liblapack.so.3gf /usr/lib64/libblas.a 

#LIBLOC= /usr/lib64/libfftw3.so.3 /usr/lib64/liblapack.so.3gf /usr/lib64/libblas.so.3gf 
LIBLOC= /usr/lib/libfftw3.so.3 /usr/lib/liblapack.so.3gf /usr/lib/libblas.so.3gf 



# centos yum install blas, yum install lapack
#LIBLOC= -lfftw3 /usr/lib64/liblapack.so.3.0.3 /usr/lib64/libblas.a 

#LIBLOC= -lfftw3   $(HOME)/kit/numericallib/LAPACK/lapack_core2gfortran.a \
# $(HOME)/kit/numericallib/LAPACK/blas_core2gfortran.a \
# $(HOME)/kit/numericallib/LAPACK/tmglib_core2gfortran.a 

#LIBLOC= -lfftw3 -L/opt/intel/mkl/10.0.2.018/lib/em64t/lib \
# -lmkl_lapack -lmkl_em64t  -lmkl_core 

#for ubuntu thinkpadt61.
#LIBLOC=  /usr/lib64/libfftw3.so.3.1.2 /usr/lib64/liblapack.a

#/usr/lib64/libblas-3.a 

#LIBLOC = -L/usr/lib64/atlas/ /usr/lib64/atlas/liblapack.so.3 \
#          /usr/lib64/atlas/libf77blas.so.3 /usr/lib64/atlas/libcblas.so.3 \
#          /usr/lib64/atlas/libatlas.so.3 -lfftw3

LIBMATH= $(LIBLOC)






# yum install atlas --> this did not work... normchk.si gave NaN
#LIBMATH = -L/usr/lib64/atlas/ /usr/lib64/atlas/liblapack.so.3 \
#            /usr/lib64/atlas/libf77blas.so.3 /usr/lib64/atlas/libcblas.so.3 \
#            /usr/lib64/atlas/libatlas.so.3 -lfftw3


#(5) Linker ####################
###for linux 586
#LKFLAGS2 = $(ECAL)/slatsm/slatsm.a  -L/usr/intel/mkl/LIB -lmkl32_lapack -lmkl32_p3  -L/usr/lib/gcc-lib/i586-redhat-linux/2.95.3 -lg2c -lpthread  
#
###for sr8k
#LKFLAGS2 = $(COMMON) $(ECAL)/slatsm/slatsm.a  -lblas -llapack -lpl -parallel  -lm

#LK = f95
LK = mpif90
#LK= ifort -parallel 

LKFLAGS2 = $(LIBMATH) 
#-Vaxlib -tpp7
#LKFLAGS2 = $(LIBMATH) -Vaxlib -tpp7 -lpthread



#(6) Root of ecal #############
ECAL   = $(HOME)/ecal
BINDIR = $(HOME)/bin



#-------------------------------------------------------
# src directories
gwsrc   = ../gwsrc/
main    = ../main/
nfpsrc  = ../nfpsrc/
slatsmlib  = ../slatsmlib/
tote = ../tote/
maxloc = ../Miyake/maxloc/
# tag directory
tags   = ../

#progs  = hbasfp0 hvccfp0 hx0fp0 hsfp0 hef hqpe hchknw qg4gw gwinit heftet hmergewv hparainfo hbndout rdata4gw_v2 convgwin hx0fp0_sc hsfp0_sc hqpe_sc kino_input_test hecor eout eout2 h_uumatrix hsigmconv
# lmf_exec
#progs  = hbasfp0 hvccfp0 hx0fp0 hsfp0 hef hqpe hchknw qg4gw gwinit heftet hmergewv hparainfo hbndout rdata4gw_v2  hx0fp0_fal hx0fp1 
progs  = hbasfp0 hvccfp0 hx0fp0 hsfp0 hef hqpe hchknw qg4gw gwinit heftet hmergewv hparainfo hbndout rdata4gw_v2 convgwin hx0fp0_sc hsfp0_sc hqpe_sc
#kino_input_test eout eout2  hecor h_uumatrix hsigmconv hwmat hmaxloc huumat qpwf hpsig hnocc_mlw hx0fp0_mlw hphig 
# hmaxloc1D
progs2 = $(progs) $(tags)TAGS 
#checkmod 

#script = cleargw* dqpu dtote eps* ex* gw* hqpemetal* inf* lmgw* plotg save* tote_lmfh2 xqp mkG*
script = cleargw* dqpu eps* gw* mkG*

#### You can choose these options. all is default.

all :$(progs2) 

clean:  
	 rm -f  $(progs)

install:  
	 cp  $(progs)  $(BINDIR)

install2:  
	 cp  $(script) $(BINDIR)

cleanall:  
	 rm -f  $(progs2) $(main)*.F $(gwsrc)*.F  $(nfpsrc)*.F  *.mod  $(slatsmlib)*.F $(tote)*.F  $(maxloc)*.F 

# This is necesaly to compile *.f in right order.
# When you recompile and link, just repeat 'make' (not necessary to repeat 'make init').
# When checkmodule recompile source, you have to repeat 'make'.
init:
	exec ./checkmodule ../*/*.F ../Miyake/*/*.F

checkmod:
	exec ./checkmodule ../*/*.F ../Miyake/*/*.F 
#../../lm7K/subs/m_hamindex.F


####from tote #################################################################################                                     
#LIBLOC  = $(ECAL)/fftw/libfftw.a $(LIBMATH)
##-L/usr/local/ATLAS/lib/Linux_P4SSE2 -llapack -lcblas -lf77blas -latlas                                                             
#LIBSLA  = $(ECAL)/slatsm/slatsm.a
#LIBFP   = $(ECAL)/lm-6.14y/fp/subs.a
#LIBSUBS = $(ECAL)/lm-6.14y/subs/subs.a
#LIBES  = $(LIBSLA) $(LIBLOC)
#lmsrc   = ../../lm-6.14y/
######################################################################################            


ECOR = \
$(tote)hecor.F \
$(tote)rpaq.F 
#eispack.F

NFPLtot  = $(nfpsrc)diagcv2.F 

GW0tot = \
$(gwsrc)rwbzdata.F \
$(gwsrc)keyvalue.F \
$(gwsrc)genallcf_mod.F \
$(gwsrc)rgwinf_mod.F \
$(gwsrc)nocctotg.F \
$(gwsrc)ppbafp.fal$(para_g) \
$(gwsrc)psi2b_v2$(para_g) \
$(gwsrc)psi2b_v3$(para_g) \
$(gwsrc)wfacx.F \
$(gwsrc)sortea.F \
$(gwsrc)rydberg.F \
$(gwsrc)polinta.F \
$(gwsrc)efsimplef.F \
$(gwsrc)extension.F \
$(gwsrc)rangedq.F \
$(gwsrc)nword.F \
$(gwsrc)scg.F \
$(gwsrc)matm.F \
$(gwsrc)rdpp.F \
$(gwsrc)mptauof.F \
$(gwsrc)rotdlmm.F \
$(gwsrc)iopen.F \
$(gwsrc)cputid.F \
$(gwsrc)rw.F \
$(gwsrc)ext.F \
$(gwsrc)ext2.F \
$(gwsrc)cross.F \
$(gwsrc)mate.F \
$(gwsrc)mate1.F \
$(gwsrc)icopy.F \
$(gwsrc)bib1.F \
$(gwsrc)index.F \
$(gwsrc)idxk.F \
$(gwsrc)maxnn.F \
$(gwsrc)reindx.F \
$(gwsrc)iprint.F \
$(gwsrc)bz.F \
$(gwsrc)bzmesh.F \
$(gwsrc)genqbz.F \
$(gwsrc)switches.F \
$(gwsrc)linpackdummy.F \
$(gwsrc)rppovl.F \
$(gwsrc)llnew.F

#LMFtot= \
#$(lmsrc)lmf.F \
#$(tote)mkpot_exec.F \
#$(tote)locpot_exec.F \
#$(tote)vxcnsp_exec.F \
#$(tote)evxcv_exec.F \
#$(tote)mkehkf_exec.F \
#$(tote)smvxcm_exec.F

EO= \
$(tote)eout.F \
$(gwsrc)rydberg.F

EO2= \
$(tote)eout2.F \
$(gwsrc)rydberg.F

hecor: $(ECOR) $(NFPLtot) $(GW0)  
	$(LK) $(LKFLAGS1) $(ECOR) $(GW0) $(NFPLtot) $(LKFLAGS2) -o $@

#	$(LK) $(LKFLAGS1) $(ECORtot) $(GW0tot) $(NFPLtot) $(LKFLAGS2) -o $@

eout: $(EO)  
	$(LK) $(LKFLAGS1) $(EO) $(LKFLAGS2) -o $@

eout2: $(EO2)  
	$(LK) $(LKFLAGS1) $(EO2) $(LKFLAGS2) -o $@

#lmf_exec:	$(LMFtot)
#	$(LK) $(LKC) $(LMFtot) $(LIBFP) $(LIBSUBS) $(LIBES) -o $@
##############################################################################








################
#
# BNDCONN= \
# $(gwsrc)bndconn.F   ### This is not linked but bndconn.F is used in lm/lmfgw. 
# It is now included in lm/gw/
 DERFC=   $(nfpsrc)derfc.F \
          $(nfpsrc)d1mach.F \
          $(nfpsrc)i1mach.F 

# test_genallcf =  \
# $(main)test_genallcf.F \
# $(gwsrc)genallcf_dump.F \
# $(GW0)


 kino_input_test =  \
 $(main)kino_input_test.F 

 convg =  \
 $(main)convgwin.F 

 GWINIT =  \
 $(main)gwinit.m.F \
 $(gwsrc)cross.F \
 $(gwsrc)genqbz.F \
 $(gwsrc)checksymlon.F \
 $(gwsrc)bzmesh.F \
 $(gwsrc)rangedq.F \
 $(gwsrc)iopenxx.F \
 $(gwsrc)iprint.F \
 $(gwsrc)keyvalue.F \
 $(gwsrc)switches.F \
 $(gwsrc)iopen.F 


 QG =  \
 $(gwsrc)conv2gwinput.F \
 $(main)qg4gw.m.F \
 $(gwsrc)getbzdata1.F \
 $(gwsrc)mkqg.F \
 $(gwsrc)q0irre.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)zsvd.F \
 $(GW0)

 RDAT_v2 = \
 $(gwsrc)keyvalue.F \
 $(gwsrc)switches.F \
 $(main)rdata4gw_v2.m.F \
 $(gwsrc)rwbzdata.F \
 $(gwsrc)mopen.F \
 $(gwsrc)gintxx.F \
 $(gwsrc)cinvrx.F \
 $(gwsrc)idxk.F \
 $(gwsrc)nword.F \
 $(gwsrc)gwinput_v2.F \
 $(gwsrc)matm.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)iopen.F \
 $(gwsrc)pplmat.F \
 $(gwsrc)bzmesh.F \
 $(gwsrc)ext.F \
 $(gwsrc)ext2.F \
 $(gwsrc)cross.F \
 $(gwsrc)rs.F \
 $(gwsrc)extension.F \
 $(gwsrc)rangedq.F \
 $(gwsrc)llnew.F \
 $(gwsrc)iqindx.F \
 $(gwsrc)polinta.F


 BAS = \
 $(main)hbasfp0.m.F \
 $(gwsrc)reindx.F \
 $(gwsrc)maxnn.F \
 $(gwsrc)icopy.F \
 $(gwsrc)basnfp.F \
 $(gwsrc)rgwinf_mod.F \
 $(gwsrc)keyvalue.F \
 $(gwsrc)switches.F \
 $(gwsrc)gintxx.F \
 $(gwsrc)rs.F \
 $(gwsrc)ext.F \
 $(gwsrc)iopen.F \
 $(gwsrc)excore.F \
 $(gwsrc)rydberg.F \
 $(gwsrc)extension.F \
 $(gwsrc)rangedq.F \
 $(gwsrc)polinta.F \
 $(gwsrc)llnew.F


 VCC= \
 $(main)hvccfp0.m.F \
 $(gwsrc)mkjp.F \
 $(gwsrc)gintxx.F \
 $(gwsrc)extension.F \
 $(gwsrc)rangedq.F \
 $(gwsrc)keyvalue.F \
 $(gwsrc)switches.F \
 $(gwsrc)strxq.F \
 $(gwsrc)iopen.F \
 $(gwsrc)pplmat.F \
 $(gwsrc)matm.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)mopen.F \
 $(gwsrc)cross.F \
 $(gwsrc)llnew.F \
 $(gwsrc)readqg.F \
 $(gwsrc)iqindx.F \
 $(gwsrc)cputid.F

 SXC_SC = \
 $(main)hsfp0.sc.m.F \
 $(gwsrc)wse.F \
 $(gwsrc)sxcf_fal2$(sxcf_g) \
 $(gwsrc)sxcf_fal2.sc$(sxcf_g) \
 $(gwsrc)bzints2.F \
 $(gwsrc)wintzsg.F \
 $(nfpsrc)diagcv2.F

 SXC = \
 $(main)hsfp0.m.F \
 $(gwsrc)wse.F \
 $(gwsrc)wintzsg.F \
 $(gwsrc)sxcf_fal2$(sxcf_g) \
 $(gwsrc)bzints2.F \
 $(gwsrc)genallcf_dump.F \
 $(nfpsrc)diagcv2.F

 WMAT = \
 $(maxloc)hwmat.F \
 $(maxloc)maxloc0.F \
 $(gwsrc)wse.F \
 $(maxloc)wmat.F \
 $(gwsrc)genallcf_dump.F

 MLOC = \
 $(maxloc)hmaxloc.F \
 $(maxloc)maxloc0.F \
 $(maxloc)maxloc1.F \
 $(maxloc)maxloc2.F \
 $(maxloc)maxloc3.F \
 $(gwsrc)wse.F \
 $(gwsrc)genallcf_dump.F

 MLOC1D = \
 $(maxloc)hmaxloc1D.F \
 $(maxloc)maxloc0.F \
 $(maxloc)maxloc1.F \
 $(maxloc)maxloc2.F \
 $(maxloc)maxloc3.F \
 $(gwsrc)wse.F \
 $(gwsrc)genallcf_dump.F

 heftet = \
 $(main)heftet.m.F \
 $(gwsrc)bzints2.F

 hnocc_mlw = \
 $(maxloc)hnocc_mlw.F \
 $(gwsrc)bzints2.F

 hef = \
 $(main)hef.m.F \
 $(gwsrc)wse.F

 CHK = \
 $(main)hchknw.m.F \
 $(gwsrc)genallcf_dump.F

 X0_SC = \
 $(main)hx0fp0.sc.m.F \
 $(gwsrc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)x0kf_v2h$(x0kf_g) \
 $(gwsrc)x0kf_v3h$(x0kf_g) \
 $(gwsrc)x0kf_v4h$(x0kf_g) \
 $(nfpsrc)diagcv2.F

 X0 = \
 $(main)hx0fp0.m.F \
 $(gwsrc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)x0kf_v2h$(x0kf_g) \
 $(gwsrc)x0kf_v3h$(x0kf_g) \
 $(gwsrc)x0kf_v4h$(x0kf_g) \
 $(nfpsrc)diagcv2.F \
 $(tote)rpaq.F \
 $(gwsrc)cinvrx.F \
 $(gwsrc)zsvd.F

 X0mlw = \
 $(maxloc)hx0fp0.m.F \
 $(maxloc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)x0kf_v2h$(x0kf_g)\
 $(maxloc)x0kf_v3h$(x0kf_g) \
 $(nfpsrc)diagcv2.F \
 $(tote)rpaq.F \
 $(gwsrc)cinvrx.F

 UU = \
 $(main)h_uumatrix.m.F \
 $(gwsrc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)gintxx.F \
 $(gwsrc)pplmat.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)x0kf_v2h$(x0kf_g) \
 $(gwsrc)x0kf_v3h$(x0kf_g) \
 $(gwsrc)x0kf_v4h$(x0kf_g) \
 $(gwsrc)rs.F \
 $(gwsrc)mopen.F \
 $(nfpsrc)u_lat_0.F \
 $(nfpsrc)wronkj.F \
 $(nfpsrc)mklegw.F \
 $(nfpsrc)rxx.F \
 $(nfpsrc)bessl.F \
 $(nfpsrc)cross.F \
 $(nfpsrc)diagcv2.F

 UU2 = \
 $(maxloc)huumat.F \
 $(gwsrc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)gintxx.F \
 $(gwsrc)pplmat.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)x0kf_v2h$(x0kf_g) \
 $(gwsrc)rs.F \
 $(gwsrc)mopen.F \
 $(nfpsrc)u_lat_0.F \
 $(nfpsrc)wronkj.F \
 $(nfpsrc)mklegw.F \
 $(nfpsrc)rxx.F \
 $(nfpsrc)bessl.F \
 $(nfpsrc)cross.F

 PSIG = \
 $(maxloc)hpsig.F \
 $(gwsrc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)gintxx.F \
 $(gwsrc)pplmat.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)x0kf_v2h$(x0kf_g) \
 $(gwsrc)rs.F \
 $(gwsrc)mopen.F \
 $(nfpsrc)u_lat_0.F \
 $(nfpsrc)wronkj.F \
 $(nfpsrc)mklegw.F \
 $(nfpsrc)rxx.F \
 $(nfpsrc)bessl.F \
 $(nfpsrc)cross.F

 PHIG = \
 $(maxloc)hphig.F \
 $(gwsrc)wcf.F \
 $(gwsrc)tetwt4.F \
 $(gwsrc)x0kf$(x0kf_g) \
 $(gwsrc)tetwt5$(tet5_g) \
 $(gwsrc)gintxx.F \
 $(gwsrc)pplmat.F \
 $(gwsrc)getgv2.F \
 $(gwsrc)x0kf_v2h$(x0kf_g) \
 $(gwsrc)rs.F \
 $(gwsrc)mopen.F \
 $(nfpsrc)u_lat_0.F \
 $(nfpsrc)wronkj.F \
 $(nfpsrc)mklegw.F \
 $(nfpsrc)rxx.F \
 $(nfpsrc)bessl.F \
 $(nfpsrc)cross.F

 MPI = $(gwsrc)MPI_fpgw.F

 GW0 = \
 $(gwsrc)m_hamindex.F\
 $(gwsrc)readpomat.F \
 $(gwsrc)keyvalue.F \
 $(gwsrc)rppovl.F \
 $(gwsrc)nocctotg.F \
 $(gwsrc)ppbafp.fal$(para_g) \
 $(gwsrc)psi2b_v2$(para_g) \
 $(gwsrc)psi2b_v3$(para_g) \
 $(gwsrc)wfacx.F \
 $(gwsrc)sortea.F \
 $(gwsrc)rydberg.F \
 $(gwsrc)polinta.F \
 $(gwsrc)efsimplef.F \
 $(gwsrc)extension.F \
 $(gwsrc)rangedq.F \
 $(gwsrc)nword.F \
 $(gwsrc)scg.F \
 $(gwsrc)matm.F \
 $(gwsrc)rdpp.F \
 $(gwsrc)mptauof.F \
 $(gwsrc)genallcf_mod.F \
 $(gwsrc)rgwinf_mod.F \
 $(gwsrc)rotdlmm.F \
 $(gwsrc)iopen.F \
 $(gwsrc)cputid.F \
 $(gwsrc)rw.F \
 $(gwsrc)ext.F \
 $(gwsrc)ext2.F \
 $(gwsrc)cross.F \
 $(gwsrc)mate.F \
 $(gwsrc)mate1.F \
 $(gwsrc)icopy.F \
 $(gwsrc)bib1.F \
 $(gwsrc)index.F \
 $(gwsrc)idxk.F \
 $(gwsrc)maxnn.F \
 $(gwsrc)reindx.F \
 $(gwsrc)iprint.F \
 $(gwsrc)bz.F \
 $(gwsrc)bzmesh.F \
 $(gwsrc)genqbz.F \
 $(gwsrc)linpackdummy.F \
 $(gwsrc)switches.F \
 $(gwsrc)rwbzdata.F \
 $(gwsrc)llnew.F  \
 $(gwsrc)readeigen.F \
 $(gwsrc)readqg.F \
 $(gwsrc)iqindx.F 

 QPE_SC = \
 $(gwsrc)switches.F \
 $(gwsrc)keyvalue.F \
 $(main)hqpe.sc.m$(hqpe_g) \
 $(gwsrc)qpe1.sc.F \
 $(gwsrc)icompvv2.F \
 $(gwsrc)iopenxx.F \
 $(gwsrc)iopen.F \
 $(gwsrc)rw.F \
 $(gwsrc)rydberg.F \
 $(gwsrc)iprint.F \
 $(gwsrc)rwbzdata.F \
 $(slatsmlib)dmcpy.F \
 $(slatsmlib)dsifa.F \
 $(slatsmlib)dsisl.F \
 $(slatsmlib)dsidi.F \
 $(slatsmlib)amix.F 

# ../../slatsm/slatsm.a 



 QPE = \
 $(gwsrc)switches.F \
 $(gwsrc)keyvalue.F \
 $(main)hqpe.m$(hqpe_g) \
 $(gwsrc)qpe1.F \
 $(gwsrc)icompvv2.F \
 $(gwsrc)iopenxx.F \
 $(gwsrc)iopen.F \
 $(gwsrc)rw.F \
 $(gwsrc)rydberg.F

 MERGE = \
 $(main)hmergewv.m.F \
 $(gwsrc)switches.F \
 $(gwsrc)keyvalue.F \
 $(gwsrc)iopen.F

 PARAINFO = \
 $(main)hparainfo.m.F \
 $(gwsrc)charext.F


 BNDOUT = \
 $(main)hbndout.m.F \
 $(gwsrc)iqagree.F \
 $(gwsrc)iopenxx.F \
 $(gwsrc)iopen.F \
 $(gwsrc)polinta.F \
 $(gwsrc)rydberg.F \
 $(gwsrc)extension.F \
 $(gwsrc)rangedq.F \
 $(gwsrc)switches.F \
 $(gwsrc)keyvalue.F 


 NFPL  = $(nfpsrc)wronkj.F \
         $(nfpsrc)sylm.F \
         $(nfpsrc)sylmnc.F \
         $(nfpsrc)u_lat_0.F \
         $(nfpsrc)mklegw.F \
         $(nfpsrc)cross.F \
         $(nfpsrc)setpr.F \
         $(nfpsrc)bessl.F \
         $(nfpsrc)rxx.F \
         $(nfpsrc)hsmq.F \
         $(nfpsrc)lgen.F \
         $(nfpsrc)hansr5.F \
         $(nfpsrc)hansr4.F \
         $(nfpsrc)lattc.F \
         $(nfpsrc)ll.F \
         $(nfpsrc)dpcopy.F \
         $(nfpsrc)dpadd.F \
         $(nfpsrc)syscalls.F \
         $(nfpsrc)qdist.F \
         $(nfpsrc)dlmtor.F \
         $(nfpsrc)dpzero.F \
         $(nfpsrc)ropyln.F \
         $(nfpsrc)ropcsm.F \
         $(nfpsrc)dsisl.F \
         $(nfpsrc)dsifa.F \
         $(nfpsrc)diagcv2.F \
         $(gwsrc)scg.F 

 SIGMCONV = \
 $(gwsrc)switches.F \
 $(gwsrc)keyvalue.F \
 $(gwsrc)iopen.F \
 $(main)hsigmconv.m.F 

###########################################

# bndconn.F:	$(BNDCONN)  
#
############### dependency for use ##################



 hsigmconv:	$(SIGMCONV)  
	  cat $(SIGMCONV) >all_hsigmconv.F
	$(FC) -c -cpp $(FFLAGS) all_hsigmconv.F


 gwinit:	$(GWINIT)  
	cat $(GWINIT) > all_gwinit.F
	$(FC) -c -cpp $(FFLAGS) all_gwinit.F


 qpwf:		$(maxloc)qpwf.F $(GW0)
	cat  $(maxloc)qpwf.F $(GW0)  >all_gpwf.F
	$(FC) -c -cpp $(FFLAGS) all_qgwf.F

 qg4gw:		$(QG)  
	cat  $(QG)  > all_qg4gw.F
	$(FC) -c -cpp $(FFLAGS) all_qg4gw.F

 rdata4gw_v2:	$(RDAT_v2)  $(NFPL)
	cat  $(RDAT_v2) $(NFPL) >all_rdata4gw.F
	$(FC) -c -cpp $(FFLAGS) all_rdata4gw.F

 hbasfp0:	$(BAS) 
	cat  $(BAS) >all_hbasfp0.F
	$(FC) -c -cpp $(FFLAGS) all_hbasfp0.F

 hvccfp0:	$(MPI) $(VCC)  $(NFPL) $(DERFC)
	cat  $(VCC) $(NFPL) $(DERFC) $(MPI) > all_hvccfp0.F
	$(FC) -c -cpp $(FFLAGS) all_hvccfp0.F 

 hx0fp0:	$(MPI) $(X0) $(GW0)
	cat  $(X0)     $(GW0) $(MPI) >all_hx0fp0.F
	$(FC) -c -cpp $(FFLAGS) all_hx0fp0.F 

# for maxloc
 hx0fp0_mlw:	$(X0mlw) $(GW0)
	cat  $(X0mlw)     $(GW0) >all_hx0fp0_mlw.F
	$(FC) -c -cpp $(FFLAGS) all_hx0fp0_mlw.F

 h_uumatrix:	$(UU) $(GW0)  
	cat  $(UU)     $(GW0) >all_huumatrix.F
	$(FC) -c -cpp $(FFLAGS) all_huumatrix.F

 huumat:	$(UU2) $(GW0)
	cat  $(UU2)     $(GW0) >all_huumat.F
	$(FC) -c -cpp $(FFLAGS) all_huumat.F

 hphig:	$(PHIG) $(GW0)
	cat  $(PHIG)     $(GW0) >all_hphig.F 
	$(FC) -c -cpp $(FFLAGS) all_hphig.F

 hpsig: $(PSIG) $(GW0)
	cat $(PSIG)     $(GW0) >all_hpsig.F
	$(FC) -c -cpp $(FFLAGS) all_hpsig.F

 hx0fp0_sc:	$(MPI) $(X0_SC) $(GW0)  
	 cat $(X0_SC)     $(GW0) $(MPI) >all_hx0fp0_sc.F
	$(FC) -c -cpp $(FFLAGS) all_hx0fp0_sc.F 

 hwmat:		$(WMAT) $(GW0)
	cat $(WMAT)    $(GW0)  >all_hwmat.F
	$(FC) -c -cpp $(FFLAGS) all_hwmat.F 

 hmaxloc:	$(MLOC)  $(NFPLtot) $(GW0)
	cat $(MLOC) $(NFPLtot) $(GW0) >all_hmaxloc.F
	$(FC) -c -cpp $(FFLAGS) all_hmaxloc.F 

 hmaxloc1D:	$(MLOC1D)  $(NFPLtot) $(GW0)
	cat $(MLOC1D) $(NFPLtot) $(GW0) >all_hmaxloc10.F
	$(FC) -c -cpp $(FFLAGS) all_hmaxloc10.F 

 hsfp0:		$(MPI) $(SXC) $(GW0)  
	 cat  $(SXC)    $(GW0) $(MPI) >all_hsfp0.F
	$(FC) -c -cpp $(FFLAGS) all_hsfp0.F 

 hsfp0_sc:	$(MPI) $(SXC_SC) $(GW0)  
	 cat $(SXC_SC)    $(GW0)  $(MPI) >all_hsfp0_sc.F
	$(FC) -c -cpp $(FFLAGS) all_hsfp0_sc.F 

 hnocc_mlw:	$(hnocc_mlw) $(GW0)
	cat $(hnocc_mlw) $(GW0)  >all hnocc_mlw.F
	$(FC) -c -cpp $(FFLAGS) all_hnocc_mlw.F 

 heftet:	$(heftet) $(GW0)  
	 cat $(heftet) $(GW0) >all_heftet.F
	$(FC) -c -cpp $(FFLAGS) all_heftet.F 

 hef:		$(hef) $(GW0)  
	 cat $(hef)    $(GW0) >all_hef.F
	$(FC) -c -cpp $(FFLAGS) all_hef.F 

 hchknw:	$(CHK) $(GW0)  
	 cat $(CHK)    $(GW0)  >all_hchknw.F
	$(FC) -c -cpp $(FFLAGS) all_hchknw.F 

 hqpe:		$(QPE) 
	 cat $(QPE) >all_hqpe.F
	$(FC) -c -cpp $(FFLAGS) all_hqpe.F 

 hqpe_sc:		$(QPE_SC) 
	 cat $(QPE_SC) >all_hqpe_sc.F
	$(FC) -c -cpp $(FFLAGS) all_hqpe_sc.F 

 hmergewv:	$(MERGE) 
	 cat $(MERGE) >all_hmergewv.F
	$(FC) -c -cpp $(FFLAGS) all_hmergewv.F

 hparainfo:	$(PARAINFO) $(GW0) 
	 cat $(PARAINFO) $(GW0) >all_hparainfo.F
	$(FC) -c -cpp $(FFLAGS) all_hparainfo.F

 hbndout:	$(BNDOUT) 
	 cat $(BNDOUT) > all_hbndout.F
	$(FC) -c -cpp $(FFLAGS) all_hbndout.F

 convgwin:	$(convg) 
	 cat $(convg) >all_convgwin.F
	$(FC) -c -cpp $(FFLAGS) all_convgwin.F

################################ test
#
# test_genallcf:	$(test_genallcf) 
#	 $(LK) $(LKFLAGS1) $(test_genallcf) $(LKFLAGS2) -o $@


 $(tags)TAGS: $(progs)
	cd $(tags);etags ./*/*/*.F ./*/*.F


# --- Make rules ---
.SUFFIXES:
.SUFFIXES: .F .F
#.SUFFIXES: .f .F .c1_o .c2_0 .c3_o .c4_o .F

.F.F:
	$(FC) $(FFLAGS) $*.F -c -o $*.F
#	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags

#.F.F:
#	$(FC) $(FFLAGS) $*.F -c -o $*.F
#	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags

#.f.F:
#	$(FC) $(FFLAGS) $*.f -c -o $*.F
#	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags

.f.c1_o:
	$(FC) $(FFLAGS_c1) $*.f -c -o $*.c1_o
	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags

.f.c2_o:
	$(FC) $(FFLAGS_c2) $*.f -c -o $*.c2_o
	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags

.f.c3_o:
	$(FC) $(FFLAGS_c3) $*.f -c -o $*.c3_o
	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags

.f.c4_o:
	$(FC) $(FFLAGS_c4) $*.f -c -o $*.c4_o
	etags $*.f -o $(tags)`echo $*.f| sed 's/..\///' | sed 's/\//-/g'`.tags


check:
	(cd ../TESTinstallGW;./testgw.py --enforce --all) 

# test for f90 dependency
#../main/hvccfp0.m.F	:	../main/hx0fp0.m.F
#
#../main/hvccfp0.m.F	:	../main/hbasfp0.m.F

include moduledepends.inc





# DO NOT DELETE

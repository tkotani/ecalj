# This is an input file for Na, with comments documenting the input.
# Lines beginning with '#' are comment lines.

# ... Version control
VERS    LMF-6 LMASA-6 LM:7 FP:7
IO      SHOW=f HELP=F VERBOS=31,30 WKP=F IACTIV=0
TESTLMF lmfa --no-iactiv na -vnk=6 -vbigbas=t -vnapval=0
        lmf  --no-iactiv na -vnk=6 -vbigbas=t -vnapval=0
        rm rst.na mixm.na
        lmfa --no-iactiv na -vnk=6 -vbigbas=t -vnapval=1
        lmf  --no-iactiv na -vnk=6 -vbigbas=t -vnapval=1
        rm mixm.na
        lmf  --no-iactiv na -vnk=6 -vbigbas=t -vnapval=2 --rs=1,1,1,1,1
TESTGW  echo -1 | lmfgw na -vnk=6 -vbigbas=2 -vnapval=1
        echo  0 | lmfgw na -vnk=6 -vbigbas=2 -vnapval=1 
        echo  1 | lmfgw na -vnk=6 -vbigbas=2 -vnapval=1 
        echo na | lmf2gw 


# ... Preprocessor variable declarations:
#   bigbas   bigbas=1 uses a larger basis
#            bigbas=2 adds g orbitals to the basis
#   napval   1 Put Na p state in the valence as a conventional local orbital
#            2 Put Na p state in the valence as an extended local orbital
#   les      Add empty spheres to check high-lying bands (implies napval)
% const bigbas=2 napval=0 les=0
% cvar les napval=1

# ... Variable declarations used as input in other categories
#   a     the lattice constant, in a.u.
#   da    change in lattice constant: a+da is lattice constant
#   nit   maximum number of band passes for LDA self-consistency
#   nk    number k-points divisions for BZ integrations
#   dist  parameter defining lattice shear; see SHEAR below
#   bzj   0=> k-points include gamma; 1=> k-points offset from gamma; see BZJOB
#   vol   cell volume
#   avw   average WS radius
#   rmt   MT radius.  lmf can handle up to about
#                     10% overlaps with negligible loss in accuracy.
#   gmax  energy cutoff for specifying FT mesh
#   nkgw  (gw input) specifies k-mesh for GW driver.
CONST   a=7.964 da=0 nit=12
        nk=10 dist=0 bzj=0
        rw=.80
%ifdef les
        vol=a^3/2 avw=(3/4/4/pi*vol)^(1/3) rmt=.80*avw
        gmax=11
%else
        vol=a^3/2 avw=(3/4/pi*vol)^(1/3) rmt=rw*avw
        gmax=8
        nkgw=8
%endif
STRUC   NBAS={les?4:1} NSPEC={les?2:1} NL=5
        ALAT=a  PLAT= -.5  .5  .5   .5 -.5  .5   .5  .5 -.5
        DALAT=da
# ... Use one the two following line with dist<>0 for a volume-conserving shear
# SHEAR=0 0 1 ... => tetragonal  SHEAR=1 1 1 ... => trigonal
        SHEAR=0 0 1 1+dist
#       SHEAR=1 1 1 1+dist
SITE    ATOM=A POS= 0 0 0
%ifdef les
        ATOM=E POS= .5 0 0
        ATOM=E POS= 0 .5  0
        ATOM=E POS= 0 0  .5
%endif
HAM     FORCES=0 XCFUN=2 ELIND=-1 TOL=1e-6 NSPIN=1 REL=t
        GMAX=gmax
GW      NKABC=nkgw GCUTB=2.7 GCUTX=2.2
% const hf=f
OPTIONS NSPIN=1 REL=t XCFUN=2 HF={hf}
BZ      NKABC=nk BZJOB=bzj N=0 W=.002 NPTS=1001 SAVDOS=t
# Because bigbas=t is really large, use a more cautious metal treatment
% ifdef bigbas
        METAL=3
% endif
        EF0=0 DELEF=.1 TETRA=t DOS=0-1 0+.5 METAL=2
% ifdef hf
        NEVMX=-1
% endif
EWALD   AS=2.0 TOL=1D-12 ALAT0=a NKRMX=600 NKDMX=600
# Because bigbas=t is really large, use a smaller mixing to help convergence
%ifdef bigbas&f
ITER    MIX=A1,b=.5,n=1;A0,b=.5,n=2 CONV=1e-5 CONVC=1e-5 NIT=nit
MIX     MODE=A1,b=.5,n=1;A0,b=.5,n=2 CONV=1e-5 CONVC=1e-5
%endif
ITER    MIX=A3 CONV=1e-5 CONVC=1e-5 NIT=nit
MIX     MODE=A3 CONV=1e-5 CONVC=1e-5
START   NIT=nit

#  ... Tokens for SPEC category
#  KMXA  defines the cutoff in the polynomial expansion of augmented basis functions.
#        (If not specified, a default is chosen.) KMXA=4 is a rather strict cutoff.
#  A=    parameter defining radial mesh for tabulation of augmented w.f. and density
#  EREF= reference energy, subtracted from the total energy.
#  RSMG= smoothing radius used in electrostatics
#  RFOCA=smoothing radius used in fitting core tails
#  LFOCA=1=> frozen core with tails expanded into the interstitial
#        2=> frozen core with xc pot from tails treated in perturbation theory
#  LMXA= l-cutoff for the basis function in augmentation spheres.
#
#  RSMH,EH, RSMH2, EH2 below define the basis set.
#  NB: the %const construct defines variables in a manner similar to the
#  CONST category above.  But variables defined with the %const or %var
#  are defined for the preprocessor stages, and are cleared once the
#  preprocessor is complete.  See doc/input-file-style.txt
SPEC    ATOM=A Z=11 R=rmt
        P=3.7,{napval?3.5:3.38},3.20,4.12,5.1 IDMOD=0,0,1,1,1
%ifdef bigbas
        LMXA=4 LMX=4
%endif

        KMXA=4
        A=.025
        EREF=-323.3409
# The following line is not needed since these are the defaults.
        RSMG=.25*rmt RFOCA=0.4*rmt LFOCA=1 LMX=3 LMXA=3

%ifndef les
% const rsm1=2.6 rsm2=1.2 e2=-1.2
%ifdef bigbas
        RSMH={rsm1},{rsm1},{rsm1},{rsm1},{bigbas>1?rsm1:0} EH=-.01,-.01,-.01,-.01,-.01
%ifdef napval
        PZ=0,{napval==2?12.94:2.9}
%endif
        RSMH2={rsm2},{rsm2},{rsm2} EH2={e2},{e2},{e2},-1
%else
        RSMH={rsm1},{rsm1},{rsm1},{rsm1},0 EH=-.01,-.01,-.01,-.01,-.01
%endif
%else
% const rsm1=2.0 rsm2=0.7 e2=-1.2
        PZ=2.9,2.9 Q=0
        RSMH={rsm1},{rsm1},{rsm1},{bigbas?rsm1:0},0 EH=-.01,-.01,-.01,-.01,-.01
        RSMH2={rsm2},{rsm2},0,{rsm2*0} EH2={-3},{e2},-1,-1
%endif

# This is the empty sphere species (normally not needed)
%ifdef les
        ATOM=E Z=0  R=rmt
        P=1.5,2.5,3.20,4.12,5.1
%ifdef bigbas
        LMXA=4 LMX=4
%endif

        KMXA=4
        A=.025
        EREF=0
# The following line is not needed since these are the defaults.
        RSMG=.25*rmt RFOCA=0.4*rmt LFOCA=1 LMX=3 LMXA=3

% const rsm1=2.6 rsm2=1.2 e2=-1.2
%ifdef bigbas
        RSMH={rsm1},{rsm1},{rsm1},{rsm1*0},0 EH=-.01,-.01,-.01,-.01,-.01
%else
        RSMH={rsm1},{rsm1},{rsm1},{rsm1*0},0 EH=-.01,-.01,-.01,-.01,-.01
%endif
%endif

#!/bin/bash
#set -o verbose
function my_error(){
    exit 1
}
FC=${FC}
if [ -z "${FC}" ]; then
   echo 'Usage: >FC=gfortran ./InstallAll'
   exit
fi
BUILD_TYPE="Release"
# BUILD_TYPE="Debug"
BINDIR=${PWD}/bin  ## Make directory for ecalj binaries and scripts.
[ -d ${BINDIR} ] || mkdir ${BINDIR} 
echo Going to install required binaries and scripts to ${BINDIR} !
# Make a link to getsyml to get syml.*
rm -f ${BINDIR}/getsyml
ln -s ${PWD}/GetSyml/getsyml.py ${BINDIR}/getsyml
# viewvesta command to invoke VESTA
pushd .
cd StructureTool/
./makelink $BINDIR
popd
# Use SRC/exec/CmakeLists.txt to make executables.
pushd .
cd SRC/exec
FC=${FC} cmake . -DBUILD_MP=OFF -DBUILD_GPU=OFF -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
make -j 32 VERBOSE=1 ||my_error

# FC=${FC} cmake . -DBUILD_MP=OFF -DBUILD_GPU=ON  -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
# make -j 32 VERBOSE=1 ||my_error

# FC=${FC} cmake . -DBUILD_MP=ON -DBUILD_GPU=OFF  -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
# make -j 32 VERBOSE=1 ||my_error
#
# FC=${FC} cmake . -DBUILD_MP=ON -DBUILD_GPU=ON  -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
# make -j 32 VERBOSE=1 ||my_error
# #
cp `find . -mindepth 1 -maxdepth 1 -executable -type f` ${BINDIR} ||my_error
popd
exit
# Install test 
echo '=== goto test ==='
cd SRC/TestInstall/
time ./testecalj.py -np 8 


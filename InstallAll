#!/bin/bash
#set -o verbose
function my_error(){
    exit 1
}
FC=${FC}
if [ -z "${FC}" ]; then
   echo 'Usage: >FC=gfortran ./InstallAll'
   exit
fi
BUILD_TYPE="Release"
# BUILD_TYPE="Debug"
BINDIR=${PWD}/bin  ## Make directory for ecalj binaries and scripts.
[ -d ${BINDIR} ] || mkdir ${BINDIR} 
echo Going to install required binaries and scripts to ${BINDIR} !
# Make a link to getsyml to get syml.*
rm -f ${BINDIR}/getsyml
ln -s ${PWD}/GetSyml/getsyml.py ${BINDIR}/getsyml
# viewvesta command to invoke VESTA
pushd .
cd StructureTool/
./makelink $BINDIR
popd
# Use SRC/exec/CmakeLists.txt to make executables.
pushd .
cd SRC/exec
rm -rf CMakeFiles CMakeCache.txt
if [ "${FC}" = "gfortran" -o "${FC}" = "ifort" ]; then
    FC=${FC} cmake .
    make -j || my_error
else
    FC=${FC} cmake . -DBUILD_MP=ON -DBUILD_GPU=ON -DBUILD_MP_GPU=ON -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
    make -j 32 || make -j 32 ||my_error
fi
    
cp `find . -mindepth 1 -maxdepth 1 -executable -type f` ${BINDIR} ||my_error
popd
# Install test 
echo '=== goto test ==='
cd SRC/TestInstall/
time ./testecalj.py -np 8 


#!/bin/bash -eu
# -------------------------------------------------------------------------
# generate MLWF.
# NOTE: Wannier is generated before wanplot (wanplot is only to make *.xsf file for plot).
#       After wanplot, we goto calculate <wan wan |W |wan wan>
# For cray, set machine="cray"
#--------------------------------------------------------------------------
### all input arguments are processed ###
if [ $# -ne 3 ] || [ $2 != "-np" ] ; then
    echo "An example of usage: genMLWF cu -np 4"
    echo "Do job_band_* in advance to genMLWF to get superposition of Wannier band plot!"
    exit 101
fi
nfpgw=`dirname $0`
MATERIAL=$1
MPI_SIZE=$3
NO_MPI=0
### end of processing input arguments ###
if [ ! -e bnd001.spin1 ];then 
    $echo_run echo "!!! Perform job_band in advance!" 
    exit
fi
### Read funcitons run_arg and run_arg_tee defined in a file run_arg ###
source $nfpgw/run_arg
######## start here ##########
$echo_run echo "### START genMLWF: MPI size= " $MPI_SIZE, "MATERIAL= "$MATERIAL
rm -f SYML 
ln -s syml.${MATERIAL} SYML
#ln -s bnds.${MATERIAL} BNDS
## Make softlink from sigm --> simg.$MATERIAL.
## If sigm and sigm.$MATERIAL coexist, sigm.$MATERIAL is moved to sigm.$MATERIAL.backup in advance.
if [ -e sigm ]; then 
    if [ -e sigm.$MATERIAL ]; then
	mv sigm.$MATERIAL sigm.$MATERIAL.bakup 
  	ln -s -f sigm sigm.$MATERIAL 
  	$echo_run echo '--- sigm is used. sigm.$MATERIAL is softlink to it  ---'
    fi
else
    $echo_run echo '--- Neither sigm nor sigm.$MATERIAL exists. ==> LDA '
fi 
######## lmf part #########################################
run_arg '---' $NO_MPI   $nfpgw /lmfa  llmfa $MATERIAL # if lmfa is not yet.
run_arg '---' $MPI_SIZE $nfpgw /lmf-MPIK llmf_start $MATERIAL
rm -f ewindow.${MATERIAL}* qbyl.${MATERIAL}* eigze*.${MATERIAL}* # remove temporaly files.
##### preparation of required inputs for GW (mainly prepare required eigenfuncitons) ######
run_arg $argin $NO_MPI   $nfpgw /lmf-MPIK  llmfgw00 $MATERIAL --jobgw=0
run_arg $argin $NO_MPI   $nfpgw /qg4gw      lqg4gw  --job=1 #Generate requied q+G vectors.
run_arg $argin $MPI_SIZE $nfpgw /lmf-MPIK llmfgw01 $MATERIAL --jobgw=1
##### GW related part (up to preparation of MPB) ###########
run_arg $argin $NO_MPI   $nfpgw /rdata4gw_v2 lrdata4gw_v2
if [ -e ANFcond ];then # This is for ANFcond. Unused recently
    #  cp EVU EVD  
    $echo_run echo "Not maintained recently" 
    exit 10
fi
run_arg '---' $NO_MPI $nfpgw /heftet leftet --job=1 # A file EFERMI for hx0fp0
#argin=1; run_arg $argin $NO_MPI $nfpgw /hchknw lchknw # A file NW, containing nw for given QPNT (probably only for one-shot GW).
run_arg '---' $NO_MPI $nfpgw /hbasfp0 lbas  --job=0 # Product basis generation 
##### maxloc start here #########################
argin=1 ;run_arg $argin $NO_MPI $nfpgw   /hmaxloc lmaxloc1     # b-vector BBVEC
argin=1 ;run_arg $argin $MPI_SIZE $nfpgw /hpsig_MPI lpsig_MPI # PSIG* =<Psi|Gaussian>.
# Gather all PSIG* into a file. (U meand UP isp=1, D means Down spin isp=2)
cat PSIGU.* >PSIGU
rm -f PSIGU.*
if [ -e PSIGD.0000 ]; then 
    cat PSIGD.* >PSIGD
    rm -f PSIGD.*
fi
argin=2 ;run_arg $argin $MPI_SIZE $nfpgw /huumat_MPI luumat2   # UU (UUmatrix <u_k,i|u_k+b,j>) matrix are caltulated.
# Gather all UU*.* into a file UUU/UUD.
cat UUU.* >UUU
rm -f UUU.*
if [ -e UUD.0000 ]; then 
    cat UUD.* >UUD
    rm -f UUD.*
fi
# -- Main part of Wannier (Both of Souza's and Marzari's and procedures sucessively).
argin=2; run_arg $argin $NO_MPI $nfpgw /hmaxloc lmaxloc2  #(band plot data are generated.)
############## Wannier function plot. *.xsf for Xcrysden. ############
run_arg '---' $NO_MPI $nfpgw  /wanplot lwanplot 
#### dipole part ####
run_arg '---' $NO_MPI $nfpgw  /qg4gw lqg4gwdipole --allqbz --job=1
run_arg '---' $MPI_SIZE $nfpgw /lmf-MPIK llmfgw01hso $MATERIAL --socmatrix --jobgw=1
run_arg '---' $NO_MPI $nfpgw /hsocmat  lsocmat
#$nfpgw/qg4gw  --job=1 --allqbz >&   lqg4gwdipole
#mpirun -np $MPI_SIZE $nfpgw/lmf-MPIK --jobgw --job=1 --socmatrix $MATERIAL >& llmfgw01hso
#$nfpgw/hsocmat >& lsocmat
exit 0

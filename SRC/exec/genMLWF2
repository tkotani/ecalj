#!/bin/bash
# -------------------------------------------------------------------------
# generate MLWF.
# NOTE: Wannier is generated before wanplot (wanplot is only to make *.xsf file for plot).
#       After wanplot, we goto calculate <wan wan |W |wan wan>
# For cray, set machine="cray"
#--------------------------------------------------------------------------
### all input arguments are processed ###
if [ $# -ne 3 ] || [ $2 != "-np" ] ; then
    echo "An example of usage: genMLWF2 cu -np 4; this is second half of genMLWF after we get Wannier"
    echo "Do job_band_* in advance to genMLWF to get superposition of Wannier band plot!"
    exit 101
fi
nfpgw=`dirname $0`
MATERIAL=$1
MPI_SIZE=$3
NO_MPI=0
### end of processing input arguments ###


### Read funcitons run_arg and run_arg_tee defined in a file run_arg ###
source $nfpgw/run_arg


######## start here ##########
$echo_run echo "### START genMLWF2: MPI size= " $MPI_SIZE, "MATERIAL= "$MATERIAL
# rm -f SYML BNDS
# ln -s syml.${MATERIAL} SYML
# ln -s bnds.${MATERIAL} BNDS
# ## Make softlink from sigm --> simg.$MATERIAL.
# ## If sigm and sigm.$MATERIAL coexist, sigm.$MATERIAL is moved to sigm.$MATERIAL.backup in advance.
# if [ -e sigm ]; then 
#     if [ -e sigm.$MATERIAL ]; then
# 	mv sigm.$MATERIAL sigm.$MATERIAL.bakup 
#   	ln -s -f sigm sigm.$MATERIAL 
#   	$echo_run echo '--- sigm is used. sigm.$MATERIAL is softlink to it  ---'
#     fi
# else
#     $echo_run echo '--- Neither sigm nor sigm.$MATERIAL exists. ==> LDA '
# fi 

# ######## lmf part #########################################
# run_arg '---' $NO_MPI   $nfpgw /lmfa  llmfa $MATERIAL # if lmfa is not yet.
# run_arg '---' $MPI_SIZE $nfpgw /lmf-MPIK llmf_start $MATERIAL
# rm -f ewindow.${MATERIAL}* qbyl.${MATERIAL}* eigze*.${MATERIAL}* # remove temporaly files.

# ##### preparation of required inputs for GW (mainly prepare required eigenfuncitons) ######
# argin=0; run_arg $argin $NO_MPI   $nfpgw /lmfgw      llmfgw00 $MATERIAL 
# argin=1; run_arg $argin $NO_MPI   $nfpgw /qg4gw      lqg4gw   #Generate requied q+G vectors.
# argin=1; run_arg $argin $MPI_SIZE $nfpgw /lmfgw-MPIK llmfgw01 $MATERIAL
# run_arg  '---' $NO_MPI   $nfpgw /lmf2gw     llmf2gw  #reform data for gw

# ##### GW related part (up to preparation of MPB) ###########
# argin=0; run_arg $argin $NO_MPI   $nfpgw /rdata4gw_v2 lrdata4gw_v2
# if [ -e ANFcond ];then # This is for ANFcond. Unused recently
#     #  cp EVU EVD  
#     $echo_run echo "Not maintained recently" 
#     exit 10
# fi
# argin=1; run_arg $argin $NO_MPI $nfpgw /heftet leftet # A file EFERMI for hx0fp0
# argin=1; run_arg $argin $NO_MPI $nfpgw /hchknw lchknw # A file NW, containing nw for given QPNT (probably only for one-shot GW).
# argin=0; run_arg $argin $NO_MPI $nfpgw /hbasfp0 lbas  # Product basis generation 

# ##### maxloc start here #########################
# argin=1 ;run_arg $argin $NO_MPI $nfpgw   /hmaxloc lmaxloc1     # b-vector BBVEC
# argin=1 ;run_arg $argin $MPI_SIZE $nfpgw /hpsig_MPI lpsig_MPI # PSIG* =<Psi|Gaussian>.
# # Gather all PSIG* into a file. (U meand UP isp=1, D means Down spin isp=2)
# cat PSIGU.* >PSIGU
# rm -f PSIGU.*
# if [ -e PSIGD.0000 ]; then 
#     cat PSIGD.* >PSIGD
#     rm -f PSIGD.*
# fi

# argin=2 ;run_arg $argin $MPI_SIZE $nfpgw /huumat_MPI luumat2   # UU (UUmatrix <u_k,i|u_k+b,j>) matrix are caltulated.
# # Gather all UU*.* into a file UUU/UUD.
# cat UUU.* >UUU
# rm -f UUU.*
# if [ -e UUD.0000 ]; then 
#     cat UUD.* >UUD
#     rm -f UUD.*
# fi
# # -- Main part of Wannier (Both of Souza's and Marzari's and procedures sucessively).
# argin=2; run_arg $argin $NO_MPI $nfpgw /hmaxloc lmaxloc2  #(band plot data are generated.)


# ############## Wannier function plot. *.xsf for Xcrysden. ############
# run_arg '---' $NO_MPI $nfpgw  /wanplot lwanplot 


### Here on, we calculate W (v and W-v) for Wannier.###########
# -- UUmatrix for Q0P (offset Gamma point) are required calculation v and W at the limit of q \to 0.
argin=3; run_arg $argin $MPI_SIZE $nfpgw /huumat_MPI luumat3
# Gather all UU*.* into a file UU*, PSIG* as well. (U meand UP isp=1, D means Down spin isp=2)
if [ -e UUq0U.0000 ]; then 
    cat UUq0U.* > UUq0U
    rm -f UUq0U.*
fi
if [ -e UUq0D.0000 ]; then 
    cat UUq0D.* > UUq0D
    rm -f UUq0D.*
fi

### pkm4crpa file mode for crpa ###
argin=10011; run_arg $argin 1 $nfpgw /hwmatK_MPI lpkm4crpa 

### Main part of v, W-v for Wanniers. ##########################
argin=0;  run_arg $argin $MPI_SIZE $nfpgw /hvccfp0 lvcc       # Coulomb matrix v
argin=1;  run_arg $argin $MPI_SIZE $nfpgw /hwmatK_MPI lwmatK1 # Matrix elements of v for Wannier
grep "Wannier" lwmatK1 > Coulomb_v 
argin=11; run_arg $argin $MPI_SIZE $nfpgw /hx0fp0 lx011       # Screened Coulomb W minus v, W-v
argin=2;  run_arg $argin $MPI_SIZE $nfpgw /hwmatK_MPI lwmatK2 # Matrix element of W-v
grep "Wannier" lwmatK2 > Screening_W-v
#$nfpgw/Cal_W.py

#### crpa
argin=10011; run_arg $argin $MPI_SIZE $nfpgw /hx0fp0 lx011crpa # cRPA Screened Coulomb W minus v, W-v
argin=2;  run_arg $argin $MPI_SIZE $nfpgw /hwmatK_MPI lwmatK2crpa # Matrix element of W-v
grep "Wannier" lwmatK2crpa > Screening_W-v_crpa
#$nfpgw/Cal_W.py

$echo_run echo "OK! It's finished well."
exit 0

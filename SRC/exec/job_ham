#!/usr/bin/env python3
import sys
import os
import subprocess

def main():
    nfpgw = os.path.dirname(os.path.abspath(__file__))
    print(f"Script name: {sys.argv[0]}")
    print(f"Arguments: {sys.argv[1:]}")

    if len(sys.argv) <= 3 or sys.argv[2] != "-np":
        print("Usage example: job_ham si -np 4 [options for lmf]")
        sys.exit(1)

    MPI_SIZE = sys.argv[3]
    target = sys.argv[1]

    # 追加オプション（--skipf など）を抽出
    extra_args = sys.argv[4:] if len(sys.argv) > 4 else []

    # HamiltonianPMT.* を削除
    for f in os.listdir('.'):
        if f.startswith("HamiltonianPMT."):
            os.remove(f)

    print("Running Hamiltonian generation")

    # lmf 実行
    cmd_writeham = [
        "mpirun", "-np", MPI_SIZE,
        os.path.join(nfpgw, "lmf"),
        target,
        "--writeham", "--mkprocar", "--noinv"
    ] + extra_args
    print("Executing:", " ".join(cmd_writeham))
    with open("out_writeham", "w") as out:
        subprocess.run(cmd_writeham, stdout=out, stderr=subprocess.STDOUT)

    # lmfham1 実行
    cmd_lmfham1 = [
        "mpirun", "-np", MPI_SIZE,
        os.path.join(nfpgw, "lmfham1"),
        target
    ] + extra_args
    print("Executing:", " ".join(cmd_lmfham1))
    with open("out_lmfham1", "w") as out:
        subprocess.run(cmd_lmfham1, stdout=out, stderr=subprocess.STDOUT)

    # MLO の案内
    print(" --- steps to get MLO ---")
    print("1. Edit mlo_foobar in GWinput, and Run")
    print("2. >lmfham2 si --job=0")
    print("3. >lmfham2 si --job=1, then Check bandplot.lmfham2.*.glt")
    print("OK! end of job_ham. Run next steps above")

if __name__ == "__main__":
    main()

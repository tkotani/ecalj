#!/usr/bin/env python3
import sys
import os
import subprocess
from run_arg import run_arg

def main():
    if len(sys.argv) <= 2 or sys.argv[2] != "-np":
        print("An example of usage: job_pdos si -np 4 [options for lmf]")
        print("   For example, [options for lmf] is ' -vnspin=2 -vso=1 -vnk1=10 -vnk2=10 -vnk3=10'")
        sys.exit()
    else:
        MPI_SIZE = sys.argv[3]

    MATERIAL = sys.argv[1]
    os.system(f'rm -rf wkp.{MATERIAL}')

    n = sys.argv[0]
    nfpgw = os.path.dirname(n)

    # Generate Pdosdata.$MATERIAL file
    run_arg('---', MPI_SIZE, nfpgw, '/lmf', 'llmf_ef', MATERIAL, '--quit=band', *sys.argv[4:])
    run_arg('---', MPI_SIZE, nfpgw, '/lmf', 'llmf_pdosband', MATERIAL, '--mkprocar', '--fullmesh', *sys.argv[4:])

    # Read Pdosdata.$MATERIAL and generate PDOS
    run_arg('---', MPI_SIZE, nfpgw, '/lmf', 'llmf_pdos', MATERIAL, '--writepdos', '-emin=-20.0', '-emax=20.0', '-ndos=4000', *sys.argv[4:])

    print("""
===== PDOS file structure (dos.isp*) =========================
(add +1 since, 1st columun is energy in these pdos files.)
  For s,p,d,f the indices 1-16 correspond to:
      index   l    m     polynomial
         1    0    0        1
    -----------------------------
         2    1   -1        y
         3    1    0        z
         4    1    1        x
    -----------------------------
         5    2   -2        xy
         6    2   -1        yz
         7    2    0        3z^2-1
         8    2    1        xz
         9    2    2        x^2-y^2
    -----------------------------
         10   3   -3        y(3x^2-y^2)
         11   3   -2        xyz
         12   3   -1        y(5z^2-1)
         13   3    0        z(5z^2-3)
         14   3    1        x(5z^2-1)
         15   3    2        z(x^2-y^2)
         16   3    3        x(x^2-3y^2)
   ------------------------
   higher is lm ordered. See Ylm definition in ecalj doc.

NOTE: site index --> See SiteInfo.lmchk, and '>lmchk foobar'
      pdos data stored in dos.isp... are ordered in Ylm (real Harmonics. 1st col is energy in Ry).
      You may edit pdos.site.foobar.gnu files for gnuplot.
==============================================================
""")

    for ufile in os.listdir('.'):
        if ufile.startswith(f'dos.isp1.site') and ufile.endswith(f'.{MATERIAL}'):
            dfile = ufile.replace('isp1', 'isp2')
            ufileg = f'pdos.{ufile.replace("dos.isp1.", "")}.glt'
            with open(ufileg, 'w') as f:
                f.write('#!/usr/bin/gnuplot -persist\n')
                f.write('rydberg=13.605\n')
                f.write(f'set terminal postscript enhanced color eps\n')
                f.write(f'set output "{ufile}.eps"\n')
                f.write('set title "PDOS s,p,d,f,g division in MuffinTin"\n')
                f.write('set xlabel " eV (zero at the Fermi energy or top of valence)"\n')
                f.write('set ylabel " number of states/(cell eV)"\n')
                f.write('set xzeroaxis\n')
                f.write('set grid\n')

                colors = ["red","green","blue","brown", "pink"]

                if os.path.exists(dfile):
                    f.write('set yrange [-5:5]\n')
                    f.write(f'plot "{ufile}" u ($1*rydberg):($2)/rydberg w l lc rgb "{colors[0]}", \'\' u ($1*rydberg):($3+$4+$5)/rydberg w l lc rgb "{colors[1]}", "" u ($1*rydberg):($6+$7+$8+$9+$10)/rydberg w l lc rgb "{colors[2]}", "" u ($1*rydberg):($11+$12+$13+$14+$15+$16+$17)/rydberg w l lc rgb "{colors[3]}", "{dfile}" u ($1*rydberg):(-$2)/rydberg w l lc rgb "{colors[0]}", \'\' u ($1*rydberg):(-$3-$4-$5)/rydberg w l lc rgb "{colors[1]}", "" u ($1*rydberg):(-$6-$7-$8-$9-$10)/rydberg w l lc rgb "{colors[2]}", "" u ($1*rydberg):(-$11-$12-$13-$14-$15-$16-$17)/rydberg w l lc rgb "{colors[3]}"\n')
               #      f.write(f'plot "{ufile}" u ($1*rydberg):($2)/rydberg w l lc rgb "{colors[0]}", \'\' u ($1*rydberg):($3+$4+$5)/rydberg w l lc rgb "{colors[1]}", "" u ($1*rydberg):($6+$7+$8+$9+$10)/rydberg w l lc rgb "{colors[2]}", "" u ($1*rydberg):($11+$12+$13+$14+$15+$16+$17)/rydberg w l lc rgb "{colors[3]}", "" u ($1*rydberg):($18+$19+$20+$21+$22+$23+$24+$25+$26)/rydberg w l lc rgb "{colors[4]}", "{dfile}" u ($1*rydberg):(-$2)/rydberg w l lc rgb "{colors[0]}", \'\' u ($1*rydberg):(-$3-$4-$5)/rydberg w l lc rgb "{colors[1]}", "" u ($1*rydberg):(-$6-$7-$8-$9-$10)/rydberg w l lc rgb "{colors[2]}", "" u ($1*rydberg):(-$11-$12-$13-$14-$15-$16-$17)/rydberg w l lc rgb "{colors[3]}", "" u ($1*rydberg):(-$18-$19-$20-$21-$22-$23-$24-$25-$26)/rydberg w l lc rgb "{colors[4]}"\n')
                else:
                    f.write('set yrange [0:5]\n')
                    f.write(f'plot "{ufile}" u ($1*rydberg):($2)/rydberg w l lc rgb "{colors[0]}", \'\' u ($1*rydberg):($3+$4+$5)/rydberg w l lc rgb "{colors[1]}", "" u ($1*rydberg):($6+$7+$8+$9+$10)/rydberg w l lc rgb "{colors[2]}", "" u ($1*rydberg):($11+$12+$13+$14+$15+$16+$17)/rydberg w l lc rgb "{colors[3]}"\n')
               #      f.write(f'plot "{ufile}" u ($1*rydberg):($2)/rydberg w l lc rgb "{colors[0]}", \'\' u ($1*rydberg):($3+$4+$5)/rydberg w l lc rgb "{colors[1]}", "" u ($1*rydberg):($6+$7+$8+$9+$10)/rydberg w l lc rgb "{colors[2]}", "" u ($1*rydberg):($11+$12+$13+$14+$15+$16+$17)/rydberg w l lc rgb "{colors[3]}", "" u ($1*rydberg):($18+$19+$20+$21+$22+$23+$24+$25+$26)/rydberg w l lc rgb "{colors[4]}"\n')

                if 'NoGnuplot' not in ' '.join(sys.argv[4:]):
                    subprocess.run(['gnuplot', '-persist', ufileg])

                f.write('set terminal x11\n')
                f.write('replot\n')

    print("--------------------------------")
    print("NOTE: For your purpose, you have to edit pdos.site.foobar.gnu files for gnuplot.")
    print("      site is given by 'lmchk foobar'")
    print("      pdos data stored in dos.isp... are ordered in Ylm (1st col is energy in Ry).")

if __name__ == "__main__":
    main()
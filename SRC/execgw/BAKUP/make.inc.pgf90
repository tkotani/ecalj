#(1) Compilar ###################
# ... Fortran and linker switches for machine LINUX with intel fortran
#FC = ifc -132 -cm -w90 -w95
#FC = ifc -132 -O0 -cm -w90 -w95
FC = pgf90
# -cm is supress all comment.
# -w95 and -w90 is to remove noisy warning related to f90 and f95 recommendations.
# See http://www.intel.com/software/products/compilers/flin/docs/ug/msg_warn.htm


# ... for Linux on a DEC alpha running fort ...


#(2) CPP SWITCHES ###################
CPPSWITCH_INTELLINUXIFC  = \
-DEXPAND_ISWAP  -DEXPAND_VDV   -DCOMMONLL  -UDUMMY_ETIME -DEXPAND_MELPLN2         \
-DUSE_X0KBLAS   -DX0KBLAS_DIV  -UEXPAND_SUBSTITUTION     -UCOMMENTOUTfor_PARALLEL \
-DMbytes_X0KBLAS_DIV=2       -DEXPAND_SORTEA

CPPSWITCH_DECALPHA = $(CPPSWITCH_INTELLINUXIFC)

CPPSWITCH_SR8K = \
-DEXPAND_ISWAP  -DEXPAND_VDV   -DCOMMONLL  -DDUMMY_ETIME  -DEXPAND_MELPLN2 \
-DUSE_X0KBLAS   -DX0KBLAS_DIV  -UEXPAND_SUBSTITUTION      -DCOMMENTOUTfor_PARALLEL \
-DMbytes_X0KBLAS_DIV=1024    -DEXPAND_SORTEA

#   NWORD_RECORDSIZE is removed. nword.f is now automatic.


#(3) Compilar options ###################
# Some groups of .f sources are compiled into .c*_o files.  (* is 1 to 4).
# The compile options are in FFLAGS_c*. The others are with .o and FFLAGS. See makefile and Search para_g or so.
# It cause a problem if a source file foo.f, which compiled into foo.c*_o contains USE module, 
# because checkmodule does now just support *.o. In such a case, you have to modify checkmodule by yourself.
#   (This note is by takao. Oct.2003)

### INTEL FORTRAN PENTIUM4 LINUX ###
#FFLAGS_c0 = -O0 -Vaxlib  -cpp $(CPPSWITCH_INTELLINUXIFC)
#FFLAGS = -Vaxlib -tpp7 -cpp -g $(CPPSWITCH_INTELLINUXIFC)   # for .o

FFLAGS = -O4 -fast -Mextend  $(CPPSWITCH_INTELLINUXIFC)   # for .o
#FFLAGS = -g -O0 -Mbounds -Mchkfpstk -Mchkstk -Mnoipa -Mextend $(CPPSWITCH_INTELLINUXIFC)   # for .o

para_g = .o     # ppbafp.f  psi2bc1.f psi2bc.f See makefile.
sxcf_g = .o     # sxcf.f
x0kf_g = .o     # x0kf.f
hqpe_g = .o     # hqpe.f
tet5_g = .o       ### What Miyake think?



### alpha for older compaq compilar ###
#FFLAGS = -O4 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .o
#FFLAGS  = -K -O4 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .o
#para_g = .o     # ppbafp.f  psi2bc1.f psi2bc.f See makefile.
#sxcf_g = .o     # sxcf.f
#x0kf_g = .o     # x0kf.f
#hqpe_g = .o     # hqpe.f

### alpha compaq compilar to override the compilar bug (rather the latest compiler requires this) #######################
#FFLAGS     = -O3 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .o
#FFLAGS_c1  = -O1 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .c1_o
#FFLAGS_c2  = 
#FFLAGS_c3  = 
#FFLAGS_c4  = -O4 -fast -arch host -tune host -recursive -cpp $(CPPSWITCH_DECALPHA)   # for .c4_o
#para_g = .o        # ppbafp.f  psi2bc1.f psi2bc.f
#sxcf_g = .c4_o     # sxcf.f
#x0kf_g = .c4_o     # x0kf.f
#hqpe_g = .c1_o     # hqpe.f

### for sr8k ###
#FFLAGS    = -Oss -loglist -Xpcomp -limit -noparallel -Xparmonitor  -nosave -64  -cpp $(CPPSWITCH_SR8K)
#FFLAGS_c1 = -Oss -loglist -Xpcomp -limit -parallel -Xparmonitor -uinline=2 -nosave -64  -cpp  $(CPPSWITCH_SR8K)
## We devide .f souces to some groups, which are compiled with the same optins to the objects with the same extentions. 
#para_g = .c1_o  # ppbafp.f  psi2bc1.f psi2bc.f
#x0kf_g = .c1_o  # x0kf.f
#sxcf_g = .o     # sxcf.f
#hqpe_g = .o     # hqpe.f


#(4) BLAS + LAPACK ############
### ATLAS BLAS
#LIBMATH= $(ECAL)/BLASplusLAPACK/LAPACK_A/lapack_a.a \
#-L$(ECAL)/BLASplusLAPACK/ATLAS/ -llapack  -lcblas -lf77blas -latlas

### Goto's BLAS; faster than ATLAS.
### See http://www.cs.utexas.edu/users/flame/goto/
#LIBMATH= $(ECAL)/BLASplusLAPACK/LAPACK_A/lapack_a.a \
#$(ECAL)/BLASplusLAPACK/GotoBLAS/xerbla.o  $(ECAL)/BLASplusLAPACK/GotoBLAS/libgoto_p4_512-r0.6.so 


# --- Libraries LIBSLA,LIBLOC ---
#LIBLOC = -L/opt/pgi/linux86-64/6.2/lib -llapack -L/usr/local/lib -lf77blas -latlas -lblas -lpgftnrtl
#LIBLOC =  -L/opt/pgi/linux86-64/6.2/lib -llapack -L/usr/lib       -lf77blas -latlas -lblas -lpgftnrtl
#LIBLOC =  -latlas -lm -L/usr/pgi/linux86-64/5.0/lib -L/r/tony/lib -L/r/tony/lib/Linux_HAMMER64SSE2/lib -L/usr/lib64/gcc-lib/x86_64-suse-linux/3.2.2 -L/usr/lib64 -llapack_pgi -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lnspgc -lpgc -lf77blas -latlas -lg2c -llapack -lblas

LIBLOC =  -llapack -lf77blas -latlas -lblas -lpgftnrtl
LIBMATH = $(LIBLOC)


### alpha
#LIBMATH=-lcxml #for alpha



#(5) Linker ####################
###for linux 586
#LKFLAGS2 = $(ECAL)/slatsm/slatsm.a  -L/usr/intel/mkl/LIB -lmkl32_lapack -lmkl32_p3  -L/usr/lib/gcc-lib/i586-redhat-linux/2.95.3 -lg2c -lpthread  
#
###for sr8k
#LKFLAGS2 = $(COMMON) $(ECAL)/slatsm/slatsm.a  -lblas -llapack -lpl -parallel  -lm

LK = pgf90
#LKFLAGS2 = $(LIBMATH) -Vaxlib -tpp7
#LKFLAGS2 = $(LIBMATH) -Vaxlib -tpp7 -lpthread
LKFLAGS2 = $(LIBMATH)


#(6) Root of ecal #############
ECAL   = $(HOME)/ecal


### (7) copy to BINDIR by make install (or make install2) ###
BINDIR =$(HOME)/bin



























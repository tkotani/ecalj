#
# local variables

#2014-11-19kino
LMF=$(bindir)/lmf-MPIK
LMFP=mpirun -np $(mpi_size) $(bindir)/lmf-MPIK
#
comp=test.comp

#
# tolerance
#
# test1
defatol1=1e-5
dehf1tol1=1e-5
dfmax1tol1=0.1
dmom1tol1=1e-4
dehf1toln=1e-5
dmomntol1=1e-4
drmsqtol1=1e-4
bndstol=1e-4
dfmaxntol1=0.1
# test2
dosclstol=0.003 #1e-3
dosmulltol=1e-3
pdostol=0.01
# test3
dmom1tol3=1e-4
# test4
dorbmtol=1e-5
# test4c
gmtol=1e-4

###########################################################
#----- subroutine test1.check
define test1.check
	@echo "compare $1 and $2"
	@$(bindir)/comp \
		$1 $2 \
		'FA etot (last species)  ' $(defatol1) \
		'etot=' -t > $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter ehf           ' $(dehf1tol1) \
		'ehf=' -v '^   it' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter ehk           ' $(dehf1tol1) \
		'ehk=' -v '^   it' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter max force     ' $(dfmax1tol1) \
		'Maximum Harris force =' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter mmom          ' $(dmom1tol1) \
		'mmom=' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehf           ' $(dehf1toln) \
		'ehf=' -v '^   it' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehk           ' $(dehf1toln) \
		'ehk=' -v '^   it' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter E(LDA+U)      ' $(dehf1toln) \
		'Etot.*LDA.*=' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter E(MTO+PW)     ' $(dehf1toln) \
		'pwmode=[^0].*ehf=' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter max force     ' $(dfmax1tol1) \
		'Maximum Harris force =' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter mmom          ' $(dmom1tol1) \
		'mmom=' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'chk1ch last iter RMS dq ' $(drmsqtol1) \
		'RMS DQ=' -v '^   it' -t >> $(comp)
	@cat $(comp)
	@-grep 'ERR' $(comp) > /dev/null && \
	echo '$(TARGET) TEST 1 FAILED comparison $1 $2' || \
	echo '$(TARGET) TEST 1 PASSED $2'
	#
	# add summary.txt
	@-grep 'ERR' $(comp) > /dev/null && \
	echo " FAILED: $(TARGET) TEST1 $2" >> ../summary.txt || \
	echo "PASSED: $(TARGET) TEST1 $2" >> ../summary.txt
	@echo "[note] run make show-summary to confirm the result."
endef

#	@-$(bindir)/compall \
#		$(REFDIR)/bnds.$(TARGET) bnds.$(TARGET) \
#		$(pdostol) >> $(comp) 2> /dev/null

###########################################################
#----- subroutine test2.check
define test2.check
	@rm -f $(comp)
	@-$(bindir)/compall \
		$1 $2 \
		$(dosclstol) >> $(comp) 
	@tail -1 $(comp)
	@-grep 'ERR' $(comp) > /dev/null && \
	echo '$(TARGET) TEST2 FAILED comparison $1 $2' || \
	echo '$(TARGET) TEST2 PASSED $2'
	#
	# add summary.txt
	@-grep 'ERR' $(comp) > /dev/null && \
	echo " FAILED: $(TARGET) TEST2 $2" >> ../summary.txt || \
	echo "PASSED: $(TARGET) TEST2 $2" >> ../summary.txt
	@echo "[note] run make show-summary to confirm the result."
endef

###########################################################
#----- subroutine test3.check
define test3.check
	@echo "compare $1 and $2"
	@$(bindir)/comp \
		$1 $2 \
		'FA etot (last species)  ' $(defatol1) \
		'etot=' -t > $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter ehf           ' $(dehf1tol1) \
		'ehf=' -v '^   it' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter ehk           ' $(dehf1tol1) \
		'ehk=' -v '^   it' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter max force     ' $(dfmax1tol1) \
		'Maximum Harris force =' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter unconst. mmom ' $(dmom1tol3) \
		'Mag. moment:' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'1st  iter mmom          ' $(dmom1tol1) \
		'mmom=' >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehf           ' $(dehf1toln) \
		'ehf=' -v '^   it' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehk           ' $(dehf1toln) \
		'ehk=' -v '^   it' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter max force     ' $(dfmax1tol1) \
		'Maximum Harris force =' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter mmom          ' $(dmom1tol1) \
		'mmom=' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'chk1ch last iter RMS dq ' $(drmsqtol1) \
		'RMS DQ=' -v '^   it' -t >> $(comp)
	@cat $(comp)

	@-grep 'ERR' $(comp) > /dev/null && \
	echo '$(TARGET) TEST 3 FAILED comparison $1 $2' || \
	echo '$(TARGET) TEST 3 PASSED $2'
	#
	# add summary.txt
	@-grep 'ERR' $(comp) > /dev/null && \
	echo " FAILED: $(TARGET) TEST3 $2" >> ../summary.txt || \
	echo "PASSED: $(TARGET) TEST3 $2" >> ../summary.txt
	@echo "[note] run make show-summary to confirm the result."
endef

#takao removed a block this was right after @cat $(comp)
#	@-$(bindir)/compall \
#		$(REFDIR)/bnds.$(TARGET) bnds.$(TARGET) \
#		$(pdostol) >> $(comp) 2> /dev/null
#	@tail -1 $(comp)

###########################################################
#----- subroutine test4a.check
define test4a.check
	@echo "compare $1 and $2"
	@$(bindir)/comp \
		$1 $2 \
		'Orbital moment          ' $(dorbmtol) \
		'total moment for class   1:' -t > $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehf           ' $(dehf1toln) \
		'ehf=' -v '^   it' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehk           ' $(dehf1toln) \
		'ehk=' -v '^   it' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehf E(MTO+PW)  ' $(dehf1toln) \
		'pwmode=[^0].*ehf=' -t >> $(comp)
	@$(bindir)/comp \
		$1 $2 \
		'last iter ehk E(MTO+PW)  ' $(dehf1toln) \
		'pwmode=[^0].*ehk=' -t >> $(comp)
	@cat $(comp)
	@-grep 'ERR' $(comp) > /dev/null && \
	echo '$(TARGET) TEST 4a FAILED comparison $1 $2' || \
	echo '$(TARGET) TEST 4a PASSED $2'
	#
	# add summary.txt
	@-grep 'ERR' $(comp) > /dev/null && \
	echo " FAILED: $(TARGET) TEST4a $2 " >> ../summary.txt || \
	echo "PASSED: $(TARGET) TEST4a $2 " >> ../summary.txt
	@echo "[note] run make show-summary to confirm the result."
endef

###########################################################
#----- subroutine test4b.check
define test4b.check
	@echo "compare $1 and $2"
	@$(bindir)/comp \
		$1 $2 \
		'Orbital moment          ' $(dorbmtol) \
		'total moment for class   1:' -t > $(comp)
	@cat $(comp)
	@-grep 'ERR' $(comp) > /dev/null && \
	echo '$(TARGET) TEST 4b FAILED comparison $1 $2' || \
	echo '$(TARGET) TEST 4b PASSED $2'
	#
	# add summary.txt
	@-grep 'ERR' $(comp) > /dev/null && \
	echo " FAILED: $(TARGET) TEST4b $2" >> ../summary.txt || \
	echo "PASSED: $(TARGET) TEST4b $2" >> ../summary.txt
	@echo "[note] run make show-summary to confirm the result."
endef

###########################################################
#----- subroutine test4c.check
define test4c.check
	$(bindir)/comp.eval \
		$1 $2 \
		'k=  0.00000  0.00000  0.00000' \
		$(lineeval) $(evalso) $(gmtol) > $(comp)
	@cat $(comp)
	@-grep 'ERR' $(comp) > /dev/null && \
	echo '$(TARGET) TEST 4c FAILED comparison $1 $2' || \
	echo '$(TARGET) TEST 4c PASSED $2'
	#
	# add summary.txt
	@-grep 'ERR' $(comp) > /dev/null && \
	echo " FAILED: $(TARGET) TEST4c $2" >> ../summary.txt || \
	echo "PASSED: $(TARGET) TEST4c $2" >> ../summary.txt
	@echo "[note] run make show-summary to confirm the result."
endef

#	@echo "Date: `date`"      >> ../summary.txt

#!/bin/bash
topdir=ecaljmto
fname=model
mcfile=mtoctrl
vpw=1
flg=("n" "n" "n" "n" "n" "n" "n" )
nflg=("0:lmf(lmfa)" "1:job_band" "2:writeham" "3:initmlo" "4:mkhamloc" "5:lmfham" "6:plotmodel" )

hamorg=Ham #original Hamiltonian
hamr=HamR #order of basis is changed
hamm=HamM #MTO only
hams=HamS #trucated by Rmj
hamc=HamC #final result
bndname=("$hamm" "$hams" "$hamc")

if [ ! -e $mcfile ]; then
    echo 'When you restart program, please edit "mtoctrl" to handle starting points.'
    echo -e " y   :lmfa and lmf(0)\n y   :job_band(1)\n y   :writeham(2)  \n y   :initmlo(3) \n y   :mkhamloc(4)  \n y   :lmfham(5) \n" \
	 "y   :plotmodel(6)" > mtoctrl
    echo '#### "y" means "do", the others mean "do NOT"' >> mtoctrl
    echo " "
    echo "please restart with modified mtoctrl"
fi

if [ -e $mcfile ]; then
    echo "$mcfile file exists! we will do followings"
#    flg=(`head -1 $mcfile`)
    for ((i=0; i<${#flg[@]} ; i++))
    do
        aaa=(`sed -n $((i+1))p $mcfile | awk '{ print $1 }'`)
	flg[i]=$aaa
#	echo "${flg[i]}"
	if [ $aaa = "y" ] ; then
	    echo ${nflg[i]}
	fi
    done
fi

echo $0
echo $@
echo $1
if [ $# -le 2 ] || [ $2 != "-np" ]; then
  echo "An example of usage: job_ham si -np 4 [options for lmf]"
  echo " CAUTION: We need PWMODE={pwmode}, where const pwmode=11 (or somegthing) given in ctrl file as follows."
  echo " %const pwmode=11"
  echo "   PWMODE={pwmode} "
  exit
else
  MPI_SIZE=$3
fi

rm all.log

if [ ${flg[0]} = "y" ]; then
    echo "lmfa $1"
    ~/$topdir/lm7K/lmfa $1 -vpwmode=$vpw 2>&1 | tee llmfa
    cat llmfa >> all.log
    echo "lmf $1 -np $3"
    mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 -vpwmode=$vpw 2>&1 | tee llmf
    cat llmf >> all.log
fi

if [ ${flg[1]} = "y" ]; then
    echo "[band plotting]"
    echo "llmf_ef...."
    mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --quit=band > llmf_ef
    echo "llmf_band...."
    mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --band > llmf_band
fi


if [ ${flg[2]} = "y" ]; then
    echo "Get efermi.lmf"
    echo 'runnnig efermi determination for pwmode=1'
    rm HamiltonianPMT*
    mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --quit=band -vpwmode=$vpw > lmf_efermi
    #mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --quit=band -vpwmode=0 > lmf_efermi
    
    echo 'runnnig hamiltonian generation for pwmode=1'
#    mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --writeham --mkprocar --fullmesh -vpwmode=$vpw 2>&1 | tee lwriteham
    mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --writeham --mkprocar --fullmesh --phispinsym -vpwmode=$vpw 2>&1 | tee lwriteham
    #mpirun -np $3 ~/$topdir/lm7K/lmf-MPIK $1 --writeham --mkprocar --fullmesh -vpwmode=0
    cat lwriteham >> all.log
    
    echo "Get Hamiltonian file, namded as HamiltonianPMT"
    cat HamiltonianPMT.* > HamiltonianPMT
    rm HamiltonianPMT.*
    cat HamiltonianPMT > ${hamorg}.K
    cat HamiltonianPMTInfo > ${hamorg}.Info

    echo "~/bin/$topdir/mkinput"
    ~/$topdir/lm7K/mkinput
fi


if [ ${flg[3]} = "y" ] ; then    
    echo "${hamorg} ${hamr}" > input_initmlo
    echo "~/bin/$topdir/initmlo"
    ~/$topdir/lm7K/initmlo 2>&1  | tee linitmlo
    cat linitmlo >> all.log
fi



if [ ${flg[4]} = "y" ] ; then    
    if [ ! -s rotmat ]; then
	rm rotmat
    fi
    
    echo "${hamr}" > input_mkhamloc
    echo "~/bin/$topdir/mkhamloc(EH cutting)"    
    wc QPLIST.IBZ | awk '{print $1}' > LEN.IBZ
    ~/$topdir/lm7K/mkhamloc 2>&1  | tee lmkhamloc
    cat lmkhamloc >> all.log    
    cat status-model >> lmkhamloc    
fi

 
if [ ${flg[5]} = "y" ] ; then 
    echo "~/bin/$topdir/lmfham"
    echo "${hamr} ${hamm} ${hams} ${hamc}" > input_lmfham 
    ~/$topdir/lm7K/lmfham 2>&1 | tee llmfham
    cat llmfham >> all.log
fi


if [ ${flg[6]} = "y" ] ; then
    
    ccc=`grep "const" ctrl.$1 | grep "nspin" | tr '=' ' '  `
    bbb=(`echo ${ccc}`)
    count=$((0))    
    for i in "${bbb[@]}"
    do
	count=$((count+1))
#	echo "${i} $count"
	if [ ${i} = "nspin" ] ; then
	    break
	fi
    done

    echo "nspin="${bbb[$count]}
    nspin=$((${bbb[$count]}))
    
    if [ ! -e "input_plotmodel" ]; then
	for i in "${bndname[@]}"
	do
	    for j in `seq 1 $nspin`
	    do
		echo "${i} ${j}" >> input_plotmodel
	    done	
	done
    fi
    
    echo "input_plotmodel!(nspin=${nspin})"
    cat input_plotmodel

    echo "~/bin/$topdir/plotmodel (input_band)"
    ~/$topdir/lm7K/plotmodel 2>&1 | tee lplotmodel
    cat lplotmodel >> all.log
    
    for jsp in `seq 1 $nspin`
    do	           
	dum=`grep to syml.$1 | tail -1 | awk '{print $10}'`
	echo "set key outside" > $fname$jsp.glt
	sed -n -e /tpia/q -e p bandplot.isp$jsp.glt >> $fname$jsp.glt
	grep "tpia" bandplot.isp$jsp.glt >> $fname$jsp.glt
	head -1 qplist.dat | awk '{print "ef= " $1}' >> $fname$jsp.glt
	echo 'plot \' >> $fname$jsp.glt
	sed -ne /bnd0/p bandplot.isp$jsp.glt >> $fname$jsp.glt
	sed -i -e "s/to/${dum}/1" $fname$jsp.glt
	sed -i -e "s/lt 1 pt/lt 1 lw 4 pt/g" $fname$jsp.glt
	sed -i -e '$s/lp/lp,\\/g' $fname$jsp.glt
	sed -i -e "s/w lp/w l title 'pmt'/g" $fname$jsp.glt
	sed -i -e 's/Gamma/\{\/Symbol G\}/g' $fname$jsp.glt
	sed -i -e "s/#set/set/g" $fname$jsp.glt   
    
	sed -i -e "s/bandplot.isp${jsp}.band.eps/${fname}${jsp}.eps/g" $fname$jsp.glt
	
	echo '"'${bndname[0]}'.bnd.spin'$jsp'" u ($1):($2) lt 2 ps 0.5 lw 3 w l title "MTO only",\' >> $fname$jsp.glt
	echo '"'${bndname[1]}'.bnd.spin'$jsp'" u ($1):($2) lt 4 ps 0.5 lw 2 w l title "truncated basis",\' >> $fname$jsp.glt
	echo '"'${bndname[2]}'.bnd.spin'$jsp'" u ($1):($2) lt 3 ps 0.5 lw 1.5 w lp title "MLO"' >> $fname$jsp.glt	
    done
    
    gnuplot ${fname}*.glt
    for jsp in `seq 1 $nspin`
    do 
	sed -i -e "s/set term/#set term/g" $fname$jsp.glt
	sed -i -e "s/set out/#set out/g" $fname$jsp.glt
	echo 'pause -1' >> $fname$jsp.glt
    done
    echo "following figures were drawn:"
    ls *eps
    gnuplot $fname$jsp.glt
fi



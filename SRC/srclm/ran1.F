      function ran1()
C- Return a random deviate between 0.0 and 1.0.
C ----------------------------------------------------------------
Ci Inputs
Co Outputs
Co   ran1
Cr Remarks
Cr   Algorithm from Knuth; adapted here from Numerical Recipes, chapter 7.
Cr   Uses three linear 
Cr   congruential generators (two for high and low order, a third
Cr   to shuffle).  Use ran1in to initialize.
C ----------------------------------------------------------------
C     implicit none
C Local
      real ran1
      integer j
      integer m1,m2,m3,ia1,ia2,ia3,ic1,ic2,ic3
      parameter (m1=259200,ia1=7141,ic1=54773)
      parameter (m2=134456,ia2=8121,ic2=28411)
      parameter (m3=243000,ia3=4561,ic3=51349)
C Static
      integer ix1,ix2,ix3 
      real r(97),rm1,rm2
      common /dran1/ ix1,ix2,ix3,rm1,rm2,r
      
C Generate next number for each sequence; 
c use third to generate random integer between 1 and 97
      ix1 = mod(ia1*ix1+ic1,m1)
      ix2 = mod(ia2*ix2+ic2,m2)
      ix3 = mod(ia3*ix3+ic3,m3)
      j = 1 + (97*ix3)/m3
#if TEST
      if (j .gt. 97 .or. j .lt. 1) pause
#endif
C Return the table entry ...
      ran1 = r(j)
C And refill it.
      r(j) = (float(ix1) + float(ix2)*rm2)*rm1
      return
      end
      subroutine ran1in(iseed)
C- A simple one-parameter initializer for ran1
C ----------------------------------------------------------------
Ci Inputs
Ci   iseed
Co Outputs
Co   ran1 is set up
Cr Remarks
C ----------------------------------------------------------------
C     implicit none
C Passed
      integer iseed
C Local
      integer j
      integer m1,m2,m3,ia1,ia2,ia3,ic1,ic2,ic3
      parameter (m1=259200,ia1=7141,ic1=54773)
      parameter (m2=134456,ia2=8121,ic2=28411)
      parameter (m3=243000,ia3=4561,ic3=51349)
C To preserve
      integer ix1,ix2,ix3 
      real r(97),rm1,rm2
      common /dran1/ ix1,ix2,ix3,rm1,rm2,r

      rm1 = 1./m1
      rm2 = 1./m2
C Seed the first, second and third sequences
      ix1 = mod(ic1-iseed,m1)
      ix1 = mod(ia1*ix1+ic1,m1)
      ix2 = mod(ix1,m2)
      ix1 = mod(ia1*ix1+ic1,m1)
      ix3 = mod(ix1,m3)
C Fill table with sequential uniform deviates generated by first two
      do  11  j = 1, 97
        ix1 = mod(ia1*ix1+ic1,m1)
        ix2 = mod(ia2*ix2+ic2,m2)
        r(j) = (float(ix1) + float(ix2)*rm2)*rm1
   11 continue
      return
      end
#if TEST
      PROGRAM D7R2
C     Driver for routine RAN1
C     Calculates pi statistically using volume of unit n-sphere
      parameter(pi=3.1415926)
      dimension iy(3),yprob(3)
      fnc(x1,x2,x3,x4) = sngl(dsqrt(
     .dble(x1)**2+dble(x2)**2+dble(x3)**2+dble(x4)**2))

      call ran1in(-1)
      do  11  i = 1, 3
        iy(i) = 0
   11 continue
      write(*,'(1x,/,t15,a)') 'Volume of unit n-sphere, n=2,3,4'
      write(*,'(1x,/,t3,a,t17,a,t26,a,t37,a)')
     .'# points','pi','(4/3)*pi','(1/2)*pi^2'
      do  14  j = 1, 15
        do  12  k=2**(j-1),2**j
          x1 = ran1()
          x2 = ran1()
          x3 = ran1()
          x4 = ran1()
          if (fnc(x1,x2,0.0,0.0) .lt. 1.0) iy(1) = iy(1)+1
          if (fnc(x1,x2,x3,0.0) .lt. 1.0) iy(2) = iy(2)+1
          if (fnc(x1,x2,x3,x4) .lt. 1.0) iy(3) = iy(3)+1
   12   continue
        do  13  i = 1, 3
          yprob(i) = 1.0*(2**(i+1))*iy(i)/(2**j)
   13   continue
        write(*,'(1x,i8,3f12.6)') 2**j,(yprob(i),i=1,3)
   14 continue
      write(*,'(1x,/,t4,a,3f12.6,/)') 'actual',pi,4.0*pi/3.0,0.5*(pi**2)
      end
#endif


      double precision function dbesj(n,x)
C- Bessel functions of integer order
C  (Taken from Numerical Recipes)
C     implicit none
      integer iacc,n,j,m,jsum
      double precision bigno,bigni,tox,x,bjm,dbesj0,bj,dbesj1,bjp,sum
      parameter (iacc=100,bigno=1d10,bigni=1d-10)

C --- Handle j=0, 1 explicitly ---
      if (n .lt. 0) call rx('DBESJ: n lt 0')
      if (n .eq. 0) then 
        dbesj = dbesj0(x)
        return
      elseif (n .eq. 1) then 
        dbesj = dbesj1(x)
        return
      endif

C --- Bessel functions for larger n ---
      tox = 2d0/x
      if (x .gt. dble(n)) then
        bjm = dbesj0(x)
        bj = dbesj1(x)
        do  11  j = 1, n-1
          bjp = j*tox*bj-bjm
          bjm = bj
          bj = bjp
   11   continue
        dbesj = bj
      else
        m = 2*((n+int(dsqrt(dble(iacc*n))))/2)
        dbesj = 0d0
        jsum = 0
        sum = 0d0
        bjp = 0d0
        bj = 1d0
        do  12  j = m, 1,-1
          bjm = j*tox*bj-bjp
          bjp = bj
          bj = bjm
          if (dabs(bj) .gt. bigno) then
            bj = bj*bigni
            bjp = bjp*bigni
            dbesj = dbesj*bigni
            sum = sum*bigni
          endif
          if (jsum .ne. 0)sum = sum+bj
          jsum = 1-jsum
          if (j .eq. n) dbesj = bjp
   12   continue
        sum = 2d0*sum-bj
        dbesj = dbesj/sum
      endif
      end
      double precision function dbesj0 (x)
c july 1977 edition.  w. fullerton, c3, los alamos scientific lab.
C NB: a bug for x<=4 !!! (errors ~10-3)
      double precision x, bj0cs(19), ampl, theta, xsml, y,
     1d1mach, dcsevl, dcos, dsqrt
      external d1mach,  dcsevl, initds
c
c series for bj0        on the interval  0.          to  1.60000e+01
c                                        with weighted error   4.39e-32
c                                         log weighted error  31.36
c                               significant figures required  31.21
c                                    decimal places required  32.00
c
      data bj0 cs(  1) / +.1002541619 6893913701 0731272640 74 d+0     /
      data bj0 cs(  2) / -.6652230077 6440513177 6787578311 24 d+0     /
      data bj0 cs(  3) / +.2489837034 9828131370 4604687266 80 d+0     /
      data bj0 cs(  4) / -.3325272317 0035769653 8843415038 54 d-1     /
      data bj0 cs(  5) / +.2311417930 4694015462 9049241177 29 d-2     /
      data bj0 cs(  6) / -.9911277419 9508092339 0485193365 49 d-4     /
      data bj0 cs(  7) / +.2891670864 3998808884 7339037470 78 d-5     /
      data bj0 cs(  8) / -.6121085866 3032635057 8184074815 16 d-7     /
      data bj0 cs(  9) / +.9838650793 8567841324 7687486364 15 d-9     /
      data bj0 cs( 10) / -.1242355159 7301765145 5158970068 36 d-10    /
      data bj0 cs( 11) / +.1265433630 2559045797 9158272103 63 d-12    /
      data bj0 cs( 12) / -.1061945649 5287244546 9148175129 59 d-14    /
      data bj0 cs( 13) / +.7470621075 8024567437 0989155840 00 d-17    /
      data bj0 cs( 14) / -.4469703227 4412780547 6270079999 99 d-19    /
      data bj0 cs( 15) / +.2302428158 4337436200 5230933333 33 d-21    /
      data bj0 cs( 16) / -.1031914479 4166698148 5226666666 66 d-23    /
      data bj0 cs( 17) / +.4060817827 4873322700 8000000000 00 d-26    /
      data bj0 cs( 18) / -.1414383600 5240913919 9999999999 99 d-28    /
      data bj0 cs( 19) / +.4391090549 6698880000 0000000000 00 d-31    /
c
      data ntj0, xsml / 0, 0.d0 /
c
      if (ntj0.ne.0) go to 10
      ntj0 = initds (bj0cs, 19, 0.1d0*d1mach(3))
      xsml = dsqrt (4.0d0*d1mach(3))
c
 10   y = dabs(x)
      if (y.gt.4.0d0) go to 20
c
      dbesj0 = 1.0d0
      if (y.gt.xsml) dbesj0 = dcsevl (.125d0*y*y-1.d0, bj0cs, ntj0)
      return
c
   20 call d9b0mp (y, ampl, theta)
      dbesj0 = ampl * dcos(theta)
c
      return
      end
      double precision function dbesj1 (x)
c sept 1983 edition.  w. fullerton, c3, los alamos scientific lab.
c apr 1991  bug fix by boisvert@cam.nist.gov
      double precision x, bj1cs(19), ampl, theta, xsml, xmin, y,
     1d1mach, dcsevl, dcos, dsqrt
      external d1mach, dcsevl, initds
c
c series for bj1        on the interval  0.          to  1.60000e+01
c                                        with weighted error   1.16e-33
c                                         log weighted error  32.93
c                               significant figures required  32.36
c                                    decimal places required  33.57
c
      data bj1 cs(  1) / -.1172614151 3332786560 6240574524 003 d+0    /
      data bj1 cs(  2) / -.2536152183 0790639562 3030884554 698 d+0    /
      data bj1 cs(  3) / +.5012708098 4469568505 3656363203 743 d-1    /
      data bj1 cs(  4) / -.4631514809 6250819184 2619728789 772 d-2    /
      data bj1 cs(  5) / +.2479962294 1591402453 9124064592 364 d-3    /
      data bj1 cs(  6) / -.8678948686 2788258452 1246435176 416 d-5    /
      data bj1 cs(  7) / +.2142939171 4379369150 2766250991 292 d-6    /
      data bj1 cs(  8) / -.3936093079 1831797922 9322764073 061 d-8    /
      data bj1 cs(  9) / +.5591182317 9468800401 8248059864 032 d-10   /
      data bj1 cs( 10) / -.6327616404 6613930247 7695274014 880 d-12   /
      data bj1 cs( 11) / +.5840991610 8572470032 6945563268 266 d-14   /
      data bj1 cs( 12) / -.4482533818 7012581903 9135059199 999 d-16   /
      data bj1 cs( 13) / +.2905384492 6250246630 6018688000 000 d-18   /
      data bj1 cs( 14) / -.1611732197 8414416541 2118186666 666 d-20   /
      data bj1 cs( 15) / +.7739478819 3927463729 8346666666 666 d-23   /
      data bj1 cs( 16) / -.3248693782 1119984114 3466666666 666 d-25   /
      data bj1 cs( 17) / +.1202237677 2274102272 0000000000 000 d-27   /
      data bj1 cs( 18) / -.3952012212 6513493333 3333333333 333 d-30   /
      data bj1 cs( 19) / +.1161678082 2664533333 3333333333 333 d-32   /
c
      data ntj1, xsml, xmin / 0, 2*0.d0 /
c
      if (ntj1.ne.0) go to 10
      ntj1 = initds (bj1cs, 19, 0.1d0*d1mach(3))
c
      xsml = dsqrt (4.0d0*d1mach(3))
      xmin = 2.0d0*d1mach(1)
c
 10   y = dabs(x)
      if (y.gt.4.0d0) go to 20
c
      dbesj1 = 0.0d0
      if (y.eq.0.0d0) return
c
      if (y.le.xmin) call errmsg('DBESJ1:  x so small j1 underflows',0)
      if (y.gt.xmin) dbesj1 = 0.5d0*x
      if (y.gt.xsml) dbesj1 = x*(.25d0 + dcsevl (.125d0*y*y-1.d0,
     1bj1cs, ntj1) )
      return
c
 20   call d9b1mp (y, ampl, theta)
      dbesj1 = dsign(ampl,x) * dcos(theta)
c
      return
      end
      subroutine d9b0mp (x, ampl, theta)
c july 1977 edition.  w. fullerton, c3, los alamos scientific lab.
c
c evaluate the modulus and phase for the bessel j0 and y0 functions.
c
      double precision x, ampl, theta, bm0cs(37), bt02cs(39),
     1bm02cs(40), bth0cs(44), xmax, pi4, z, d1mach, dcsevl,
     2dsqrt
      external d1mach, dcsevl, initds
c
c series for bm0        on the interval  1.56250e-02 to  6.25000e-02
c                                        with weighted error   4.40e-32
c                                         log weighted error  31.36
c                               significant figures required  30.02
c                                    decimal places required  32.14
c
      data bm0 cs(  1) / +.9211656246 8277427125 7376773018 2 d-1      /
      data bm0 cs(  2) / -.1050590997 2719051024 8071637175 5 d-2      /
      data bm0 cs(  3) / +.1470159840 7687597540 5639285095 2 d-4      /
      data bm0 cs(  4) / -.5058557606 0385542233 4792932770 2 d-6      /
      data bm0 cs(  5) / +.2787254538 6324441766 3035613788 1 d-7      /
      data bm0 cs(  6) / -.2062363611 7809148026 1884101897 3 d-8      /
      data bm0 cs(  7) / +.1870214313 1388796751 3817259626 1 d-9      /
      data bm0 cs(  8) / -.1969330971 1356362002 4173077782 5 d-10     /
      data bm0 cs(  9) / +.2325973793 9992754440 1250881805 2 d-11     /
      data bm0 cs( 10) / -.3009520344 9382502728 5122473448 2 d-12     /
      data bm0 cs( 11) / +.4194521333 8506691814 7120676864 6 d-13     /
      data bm0 cs( 12) / -.6219449312 1884458259 7326742956 4 d-14     /
      data bm0 cs( 13) / +.9718260411 3360684696 0176588526 9 d-15     /
      data bm0 cs( 14) / -.1588478585 7010752073 6663596693 7 d-15     /
      data bm0 cs( 15) / +.2700072193 6713088900 8621732445 8 d-16     /
      data bm0 cs( 16) / -.4750092365 2340089924 7750478677 3 d-17     /
      data bm0 cs( 17) / +.8615128162 6043708731 9170374656 0 d-18     /
      data bm0 cs( 18) / -.1605608686 9561448157 4560270335 9 d-18     /
      data bm0 cs( 19) / +.3066513987 3144829751 8853980159 9 d-19     /
      data bm0 cs( 20) / -.5987764223 1939564306 9650561706 6 d-20     /
      data bm0 cs( 21) / +.1192971253 7482483064 8906984106 6 d-20     /
      data bm0 cs( 22) / -.2420969142 0448054894 8468258133 3 d-21     /
      data bm0 cs( 23) / +.4996751760 5106164533 7100287999 9 d-22     /
      data bm0 cs( 24) / -.1047493639 3511585100 9504051199 9 d-22     /
      data bm0 cs( 25) / +.2227786843 7974681010 4818346666 6 d-23     /
      data bm0 cs( 26) / -.4801813239 3981628623 7054293333 3 d-24     /
      data bm0 cs( 27) / +.1047962723 4709599564 7699626666 6 d-24     /
      data bm0 cs( 28) / -.2313858165 6786153251 0126080000 0 d-25     /
      data bm0 cs( 29) / +.5164823088 4626742116 3519999999 9 d-26     /
      data bm0 cs( 30) / -.1164691191 8500653895 2540159999 9 d-26     /
      data bm0 cs( 31) / +.2651788486 0433192829 5833600000 0 d-27     /
      data bm0 cs( 32) / -.6092559503 8257284976 9130666666 6 d-28     /
      data bm0 cs( 33) / +.1411804686 1442593080 3882666666 6 d-28     /
      data bm0 cs( 34) / -.3298094961 2317372457 5061333333 3 d-29     /
      data bm0 cs( 35) / +.7763931143 0740650317 1413333333 3 d-30     /
      data bm0 cs( 36) / -.1841031343 6614584784 2133333333 3 d-30     /
      data bm0 cs( 37) / +.4395880138 5943107371 0079999999 9 d-31     /
c
c series for bth0       on the interval  0.          to  1.56250e-02
c                                        with weighted error   2.66e-32
c                                         log weighted error  31.57
c                               significant figures required  30.67
c                                    decimal places required  32.40
c
      data bth0cs(  1) / -.2490178086 2128936717 7097937899 67 d+0     /
      data bth0cs(  2) / +.4855029960 9623749241 0486155354 85 d-3     /
      data bth0cs(  3) / -.5451183734 5017204950 6562735635 05 d-5     /
      data bth0cs(  4) / +.1355867305 9405964054 3774459299 03 d-6     /
      data bth0cs(  5) / -.5569139890 2227626227 5832184149 20 d-8     /
      data bth0cs(  6) / +.3260903182 4994335304 0042057194 68 d-9     /
      data bth0cs(  7) / -.2491880786 2461341125 2379038779 93 d-10    /
      data bth0cs(  8) / +.2344937742 0882520554 3524135648 91 d-11    /
      data bth0cs(  9) / -.2609653444 4310387762 1775747661 36 d-12    /
      data bth0cs( 10) / +.3335314042 0097395105 8699550149 23 d-13    /
      data bth0cs( 11) / -.4789000044 0572684646 7507705574 09 d-14    /
      data bth0cs( 12) / +.7595617843 6192215972 6425685452 48 d-15    /
      data bth0cs( 13) / -.1313155601 6891440382 7733974876 33 d-15    /
      data bth0cs( 14) / +.2448361834 5240857495 4268207383 55 d-16    /
      data bth0cs( 15) / -.4880572981 0618777683 2567619183 31 d-17    /
      data bth0cs( 16) / +.1032728502 9786316149 2237563612 04 d-17    /
      data bth0cs( 17) / -.2305763381 5057217157 0047445270 25 d-18    /
      data bth0cs( 18) / +.5404444300 1892693993 0171084837 65 d-19    /
      data bth0cs( 19) / -.1324069519 4366572724 1550328823 85 d-19    /
      data bth0cs( 20) / +.3378079562 1371970203 4247921247 22 d-20    /
      data bth0cs( 21) / -.8945762915 7111779003 0269262922 99 d-21    /
      data bth0cs( 22) / +.2451990688 9219317090 8999086514 05 d-21    /
      data bth0cs( 23) / -.6938842287 6866318680 1399331576 57 d-22    /
      data bth0cs( 24) / +.2022827871 4890138392 9463033377 91 d-22    /
      data bth0cs( 25) / -.6062850000 2335483105 7941953717 64 d-23    /
      data bth0cs( 26) / +.1864974896 4037635381 8237883962 70 d-23    /
      data bth0cs( 27) / -.5878373238 4849894560 2450365308 67 d-24    /
      data bth0cs( 28) / +.1895859144 7999563485 5311795035 13 d-24    /
      data bth0cs( 29) / -.6248197937 2258858959 2916207285 65 d-25    /
      data bth0cs( 30) / +.2101790168 4551024686 6386335290 74 d-25    /
      data bth0cs( 31) / -.7208430093 5209253690 8139339924 46 d-26    /
      data bth0cs( 32) / +.2518136389 2474240867 1564059767 46 d-26    /
      data bth0cs( 33) / -.8951804225 8785778806 1439459536 43 d-27    /
      data bth0cs( 34) / +.3235723747 9762298533 2562358685 87 d-27    /
      data bth0cs( 35) / -.1188301051 9855353657 0471441137 96 d-27    /
      data bth0cs( 36) / +.4430628690 7358104820 5792319417 31 d-28    /
      data bth0cs( 37) / -.1676100964 8834829495 7920101356 81 d-28    /
      data bth0cs( 38) / +.6429294692 1207466972 5323939660 88 d-29    /
      data bth0cs( 39) / -.2499226116 6978652421 2072136827 63 d-29    /
      data bth0cs( 40) / +.9839979429 9521955672 8282603553 18 d-30    /
      data bth0cs( 41) / -.3922037524 2408016397 9891316261 58 d-30    /
      data bth0cs( 42) / +.1581810703 0056522138 5906188456 92 d-30    /
      data bth0cs( 43) / -.6452550614 4890715944 3440983654 26 d-31    /
      data bth0cs( 44) / +.2661111136 9199356137 1770183463 67 d-31    /
c
c series for bm02       on the interval  0.          to  1.56250e-02
c                                        with weighted error   4.72e-32
c                                         log weighted error  31.33
c                               significant figures required  30.00
c                                    decimal places required  32.13
c
      data bm02cs(  1) / +.9500415145 2283813693 3086133556 0 d-1      /
      data bm02cs(  2) / -.3801864682 3656709917 4808156685 1 d-3      /
      data bm02cs(  3) / +.2258339301 0314811929 5182992722 4 d-5      /
      data bm02cs(  4) / -.3895725802 3722287647 3062141260 5 d-7      /
      data bm02cs(  5) / +.1246886416 5120816979 3099052972 5 d-8      /
      data bm02cs(  6) / -.6065949022 1025037798 0383505838 7 d-10     /
      data bm02cs(  7) / +.4008461651 4217469910 1527597104 5 d-11     /
      data bm02cs(  8) / -.3350998183 3980942184 6729879457 4 d-12     /
      data bm02cs(  9) / +.3377119716 5174173670 6326434199 6 d-13     /
      data bm02cs( 10) / -.3964585901 6350127005 6935629582 3 d-14     /
      data bm02cs( 11) / +.5286111503 8838572173 8793974473 5 d-15     /
      data bm02cs( 12) / -.7852519083 4508523136 5464024349 3 d-16     /
      data bm02cs( 13) / +.1280300573 3866822010 1163407344 9 d-16     /
      data bm02cs( 14) / -.2263996296 3914297762 8709924488 4 d-17     /
      data bm02cs( 15) / +.4300496929 6567903886 4641029047 7 d-18     /
      data bm02cs( 16) / -.8705749805 1325870797 4753545145 5 d-19     /
      data bm02cs( 17) / +.1865862713 9620951411 8144277205 0 d-19     /
      data bm02cs( 18) / -.4210482486 0930654573 4508697230 1 d-20     /
      data bm02cs( 19) / +.9956676964 2284009915 8162741784 2 d-21     /
      data bm02cs( 20) / -.2457357442 8053133596 0592147854 7 d-21     /
      data bm02cs( 21) / +.6307692160 7620315680 8735370705 9 d-22     /
      data bm02cs( 22) / -.1678773691 4407401426 9333117238 8 d-22     /
      data bm02cs( 23) / +.4620259064 6739044337 7087813608 7 d-23     /
      data bm02cs( 24) / -.1311782266 8603087322 3769340249 6 d-23     /
      data bm02cs( 25) / +.3834087564 1163028277 4792244027 6 d-24     /
      data bm02cs( 26) / -.1151459324 0777412710 7261329357 6 d-24     /
      data bm02cs( 27) / +.3547210007 5233385230 7697134521 3 d-25     /
      data bm02cs( 28) / -.1119218385 8150046462 6435594217 6 d-25     /
      data bm02cs( 29) / +.3611879427 6298378316 9840499425 7 d-26     /
      data bm02cs( 30) / -.1190687765 9133331500 9264176246 3 d-26     /
      data bm02cs( 31) / +.4005094059 4039681318 0247644953 6 d-27     /
      data bm02cs( 32) / -.1373169422 4522123905 9519391601 7 d-27     /
      data bm02cs( 33) / +.4794199088 7425315859 9649152643 7 d-28     /
      data bm02cs( 34) / -.1702965627 6241095840 0699447645 2 d-28     /
      data bm02cs( 35) / +.6149512428 9363300715 0357516132 4 d-29     /
      data bm02cs( 36) / -.2255766896 5818283499 4430023724 2 d-29     /
      data bm02cs( 37) / +.8399707509 2942994860 6165835320 0 d-30     /
      data bm02cs( 38) / -.3172997595 5626023555 6742393615 2 d-30     /
      data bm02cs( 39) / +.1215205298 8812985545 8333302651 4 d-30     /
      data bm02cs( 40) / -.4715852749 7544386930 1321056804 5 d-31     /
c
c series for bt02       on the interval  1.56250e-02 to  6.25000e-02
c                                        with weighted error   2.99e-32
c                                         log weighted error  31.52
c                               significant figures required  30.61
c                                    decimal places required  32.32
c
      data bt02cs(  1) / -.2454829521 3424597462 0504672493 24 d+0     /
      data bt02cs(  2) / +.1254412103 9084615780 7853317782 99 d-2     /
      data bt02cs(  3) / -.3125395041 4871522854 9734467095 71 d-4     /
      data bt02cs(  4) / +.1470977824 9940831164 4534269693 14 d-5     /
      data bt02cs(  5) / -.9954348893 7950033643 4688503511 58 d-7     /
      data bt02cs(  6) / +.8549316673 3203041247 5787113977 51 d-8     /
      data bt02cs(  7) / -.8698975952 6554334557 9855121791 92 d-9     /
      data bt02cs(  8) / +.1005209953 3559791084 5401010821 53 d-9     /
      data bt02cs(  9) / -.1282823060 1708892903 4836236855 44 d-10    /
      data bt02cs( 10) / +.1773170078 1805131705 6557504510 23 d-11    /
      data bt02cs( 11) / -.2617457456 9485577488 6362841809 25 d-12    /
      data bt02cs( 12) / +.4082835138 9972059621 9664812211 03 d-13    /
      data bt02cs( 13) / -.6675166823 9742720054 6067495542 61 d-14    /
      data bt02cs( 14) / +.1136576139 3071629448 3924695499 51 d-14    /
      data bt02cs( 15) / -.2005118962 0647160250 5592664121 17 d-15    /
      data bt02cs( 16) / +.3649797879 4766269635 7205914641 06 d-16    /
      data bt02cs( 17) / -.6830963756 4582303169 3558437888 00 d-17    /
      data bt02cs( 18) / +.1310758314 5670756620 0571042679 46 d-17    /
      data bt02cs( 19) / -.2572336310 1850607778 7571306495 99 d-18    /
      data bt02cs( 20) / +.5152165744 1863959925 2677809493 33 d-19    /
      data bt02cs( 21) / -.1051301756 3758802637 9407414613 33 d-19    /
      data bt02cs( 22) / +.2182038199 1194813847 3010845013 33 d-20    /
      data bt02cs( 23) / -.4600470121 0362160577 2259054933 33 d-21    /
      data bt02cs( 24) / +.9840700692 5466818520 9536511999 99 d-22    /
      data bt02cs( 25) / -.2133403803 5728375844 7359863466 66 d-22    /
      data bt02cs( 26) / +.4683103642 3973365296 0662869333 33 d-23    /
      data bt02cs( 27) / -.1040021369 1985747236 5133823999 99 d-23    /
      data bt02cs( 28) / +.2334910567 7301510051 7777408000 00 d-24    /
      data bt02cs( 29) / -.5295682532 3318615788 0497493333 33 d-25    /
      data bt02cs( 30) / +.1212634195 2959756829 1962879999 99 d-25    /
      data bt02cs( 31) / -.2801889708 2289428760 2756266666 66 d-26    /
      data bt02cs( 32) / +.6529267898 7012873342 5937066666 66 d-27    /
      data bt02cs( 33) / -.1533798006 1873346427 8357333333 33 d-27    /
      data bt02cs( 34) / +.3630588430 6364536682 3594666666 66 d-28    /
      data bt02cs( 35) / -.8656075571 3629122479 1722666666 66 d-29    /
      data bt02cs( 36) / +.2077990997 2536284571 2383999999 99 d-29    /
      data bt02cs( 37) / -.5021117022 1417221674 3253333333 33 d-30    /
      data bt02cs( 38) / +.1220836027 9441714184 1919999999 99 d-30    /
      data bt02cs( 39) / -.2986005626 7039913454 2506666666 66 d-31    /
c
      data pi4 / 0.7853981633 9744830961 5660845819 876 d0 /
      data nbm0, nbt02, nbm02, nbth0, xmax / 4*0, 0.d0 /
c
      if (nbm0.ne.0) go to 10
      eta = 0.1d0*d1mach(3)
      nbm0 = initds (bm0cs, 37, eta)
      nbt02 = initds (bt02cs, 39, eta)
      nbm02 = initds (bm02cs, 40, eta)
      nbth0 = initds (bth0cs, 44, eta)
c
      xmax = 1.0d0/d1mach(4)
c
c   10 if (x.lt.4.d0) call seteru (22hd9b0mp  x must be ge 4, 22, 1, 2)
   10 if (x.lt.4.d0) call errmsg('D9B0MP: x must be ge 4',2)
c
      if (x.gt.8.d0) go to 20
      z = (128.d0/(x*x) - 5.d0)/3.d0
      ampl = (.75d0 + dcsevl (z, bm0cs, nbm0))/dsqrt(x)
      theta = x - pi4 + dcsevl (z, bt02cs, nbt02)/x
      return
c
   20 if (x.gt.xmax)
     .call errmsg('D9B0MP:  no precision because x is big',2)

c
      z = 128.d0/(x*x) - 1.d0
      ampl = (.75d0 + dcsevl (z, bm02cs, nbm02))/dsqrt(x)
      theta = x - pi4 + dcsevl (z, bth0cs, nbth0)/x
      return
c
      end
      subroutine d9b1mp (x, ampl, theta)
c july 1977 edition.  w. fullerton, c3, los alamos scientific lab.
c
c evaluate the modulus and phase for the bessel j1 and y1 functions.
c
      double precision x, ampl, theta, bm1cs(37), bt12cs(39),
     1bm12cs(40), bth1cs(44), xmax, pi4, z, d1mach, dcsevl,
     2dsqrt
      external d1mach, dcsevl, initds
c
c series for bm1        on the interval  1.56250e-02 to  6.25000e-02
c                                        with weighted error   4.91e-32
c                                         log weighted error  31.31
c                               significant figures required  30.04
c                                    decimal places required  32.09
c
      data bm1 cs(  1) / +.1069845452 6180630149 6998530853 8 d+0      /
      data bm1 cs(  2) / +.3274915039 7159649007 2905514344 5 d-2      /
      data bm1 cs(  3) / -.2987783266 8316985920 3044577793 8 d-4      /
      data bm1 cs(  4) / +.8331237177 9919745313 9322266902 3 d-6      /
      data bm1 cs(  5) / -.4112665690 3020073048 9638172549 8 d-7      /
      data bm1 cs(  6) / +.2855344228 7892152207 1975766316 1 d-8      /
      data bm1 cs(  7) / -.2485408305 4156238780 6002659605 5 d-9      /
      data bm1 cs(  8) / +.2543393338 0725824427 4248439717 4 d-10     /
      data bm1 cs(  9) / -.2941045772 8229675234 8975082790 9 d-11     /
      data bm1 cs( 10) / +.3743392025 4939033092 6505615362 6 d-12     /
      data bm1 cs( 11) / -.5149118293 8211672187 2054824352 7 d-13     /
      data bm1 cs( 12) / +.7552535949 8651439080 3404076419 9 d-14     /
      data bm1 cs( 13) / -.1169409706 8288464441 6629062246 4 d-14     /
      data bm1 cs( 14) / +.1896562449 4347915717 2182460506 0 d-15     /
      data bm1 cs( 15) / -.3201955368 6932864206 6477531639 4 d-16     /
      data bm1 cs( 16) / +.5599548399 3162041144 8416990549 3 d-17     /
      data bm1 cs( 17) / -.1010215894 7304324431 1939044454 4 d-17     /
      data bm1 cs( 18) / +.1873844985 7275629833 0204271957 3 d-18     /
      data bm1 cs( 19) / -.3563537470 3285802192 7430143999 9 d-19     /
      data bm1 cs( 20) / +.6931283819 9712383304 2276351999 9 d-20     /
      data bm1 cs( 21) / -.1376059453 4065001522 5140893013 3 d-20     /
      data bm1 cs( 22) / +.2783430784 1070802205 9977932799 9 d-21     /
      data bm1 cs( 23) / -.5727595364 3205616893 4866943999 9 d-22     /
      data bm1 cs( 24) / +.1197361445 9188926725 3575679999 9 d-22     /
      data bm1 cs( 25) / -.2539928509 8918719766 4144042666 6 d-23     /
      data bm1 cs( 26) / +.5461378289 6572959730 6961919999 9 d-24     /
      data bm1 cs( 27) / -.1189211341 7733202889 8628949333 3 d-24     /
      data bm1 cs( 28) / +.2620150977 3400815949 5782400000 0 d-25     /
      data bm1 cs( 29) / -.5836810774 2556859019 2093866666 6 d-26     /
      data bm1 cs( 30) / +.1313743500 0805957734 2361599999 9 d-26     /
      data bm1 cs( 31) / -.2985814622 5103803553 3277866666 6 d-27     /
      data bm1 cs( 32) / +.6848390471 3346049376 2559999999 9 d-28     /
      data bm1 cs( 33) / -.1584401568 2224767211 9296000000 0 d-28     /
      data bm1 cs( 34) / +.3695641006 5709380543 0101333333 3 d-29     /
      data bm1 cs( 35) / -.8687115921 1446682430 1226666666 6 d-30     /
      data bm1 cs( 36) / +.2057080846 1587634629 2906666666 6 d-30     /
      data bm1 cs( 37) / -.4905225761 1162255185 2373333333 3 d-31     /
c
c series for bt12       on the interval  1.56250e-02 to  6.25000e-02
c                                        with weighted error   3.33e-32
c                                         log weighted error  31.48
c                               significant figures required  31.05
c                                    decimal places required  32.27
c
      data bt12cs(  1) / +.7382386012 8742974662 6208397927 64 d+0     /
      data bt12cs(  2) / -.3336111317 4483906384 4701476811 89 d-2     /
      data bt12cs(  3) / +.6146345488 8046964698 5148994201 86 d-4     /
      data bt12cs(  4) / -.2402458516 1602374264 9776354695 68 d-5     /
      data bt12cs(  5) / +.1466355557 7509746153 2105919972 04 d-6     /
      data bt12cs(  6) / -.1184191730 5589180567 0051475049 83 d-7     /
      data bt12cs(  7) / +.1157419896 3919197052 1254663030 55 d-8     /
      data bt12cs(  8) / -.1300116112 9439187449 3660077945 71 d-9     /
      data bt12cs(  9) / +.1624539114 1361731937 7421662736 67 d-10    /
      data bt12cs( 10) / -.2208963682 1403188752 1554417701 28 d-11    /
      data bt12cs( 11) / +.3218030425 8553177090 4743586537 78 d-12    /
      data bt12cs( 12) / -.4965314793 2768480785 5520211353 81 d-13    /
      data bt12cs( 13) / +.8043890043 2847825985 5588826393 17 d-14    /
      data bt12cs( 14) / -.1358912131 0161291384 6947126822 82 d-14    /
      data bt12cs( 15) / +.2381050439 7147214869 6765296059 73 d-15    /
      data bt12cs( 16) / -.4308146636 3849106724 4712414207 99 d-16    /
      data bt12cs( 17) / +.8020254403 2771002434 9935125504 00 d-17    /
      data bt12cs( 18) / -.1531631064 2462311864 2300274687 99 d-17    /
      data bt12cs( 19) / +.2992860635 2715568924 0730405546 66 d-18    /
      data bt12cs( 20) / -.5970996465 8085443393 8156366506 66 d-19    /
      data bt12cs( 21) / +.1214028966 9415185024 1608526506 66 d-19    /
      data bt12cs( 22) / -.2511511469 6612948901 0069777066 66 d-20    /
      data bt12cs( 23) / +.5279056717 0328744850 7383807999 99 d-21    /
      data bt12cs( 24) / -.1126050922 7550498324 3611613866 66 d-21    /
      data bt12cs( 25) / +.2434827735 9576326659 6634624000 00 d-22    /
      data bt12cs( 26) / -.5331726123 6931800130 0384426666 66 d-23    /
      data bt12cs( 27) / +.1181361505 9707121039 2059903999 99 d-23    /
      data bt12cs( 28) / -.2646536828 3353523514 8567893333 33 d-24    /
      data bt12cs( 29) / +.5990339404 1361503945 5778133333 33 d-25    /
      data bt12cs( 30) / -.1369085463 0829503109 1363839999 99 d-25    /
      data bt12cs( 31) / +.3157679015 4380228326 4136533333 33 d-26    /
      data bt12cs( 32) / -.7345791508 2084356491 4005333333 33 d-27    /
      data bt12cs( 33) / +.1722808148 0722747930 7059200000 00 d-27    /
      data bt12cs( 34) / -.4071690796 1286507941 0688000000 00 d-28    /
      data bt12cs( 35) / +.9693474513 6779622700 3733333333 33 d-29    /
      data bt12cs( 36) / -.2323763633 7765716765 3546666666 66 d-29    /
      data bt12cs( 37) / +.5607451067 3522029406 8906666666 66 d-30    /
      data bt12cs( 38) / -.1361646539 1539005860 5226666666 66 d-30    /
      data bt12cs( 39) / +.3326310923 3894654388 9066666666 66 d-31    /
c
c series for bm12       on the interval  0.          to  1.56250e-02
c                                        with weighted error   5.01e-32
c                                         log weighted error  31.30
c                               significant figures required  29.99
c                                    decimal places required  32.10
c
      data bm12cs(  1) / +.9807979156 2330500272 7209354693 7 d-1      /
      data bm12cs(  2) / +.1150961189 5046853061 7548348460 2 d-2      /
      data bm12cs(  3) / -.4312482164 3382054098 8935809773 2 d-5      /
      data bm12cs(  4) / +.5951839610 0888163078 1302980183 2 d-7      /
      data bm12cs(  5) / -.1704844019 8269098574 0070158647 8 d-8      /
      data bm12cs(  6) / +.7798265413 6111095086 5817382740 1 d-10     /
      data bm12cs(  7) / -.4958986126 7664158094 9175495186 5 d-11     /
      data bm12cs(  8) / +.4038432416 4211415168 3820226514 4 d-12     /
      data bm12cs(  9) / -.3993046163 7251754457 6548384664 5 d-13     /
      data bm12cs( 10) / +.4619886183 1189664943 1334243277 5 d-14     /
      data bm12cs( 11) / -.6089208019 0953833013 4547261933 3 d-15     /
      data bm12cs( 12) / +.8960930916 4338764821 5704804124 9 d-16     /
      data bm12cs( 13) / -.1449629423 9420231229 1651891892 5 d-16     /
      data bm12cs( 14) / +.2546463158 5377760561 6514964806 8 d-17     /
      data bm12cs( 15) / -.4809472874 6478364442 5926371862 0 d-18     /
      data bm12cs( 16) / +.9687684668 2925990490 8727583912 4 d-19     /
      data bm12cs( 17) / -.2067213372 2779660232 4503811755 1 d-19     /
      data bm12cs( 18) / +.4646651559 1503847318 0276780959 0 d-20     /
      data bm12cs( 19) / -.1094966128 8483341382 4135132833 9 d-20     /
      data bm12cs( 20) / +.2693892797 2886828609 0570761278 5 d-21     /
      data bm12cs( 21) / -.6894992910 9303744778 1897002685 7 d-22     /
      data bm12cs( 22) / +.1830268262 7520629098 9066855474 0 d-22     /
      data bm12cs( 23) / -.5025064246 3519164281 5611355322 4 d-23     /
      data bm12cs( 24) / +.1423545194 4548060396 3169363419 4 d-23     /
      data bm12cs( 25) / -.4152191203 6164503880 6888676980 1 d-24     /
      data bm12cs( 26) / +.1244609201 5039793258 8233007654 7 d-24     /
      data bm12cs( 27) / -.3827336370 5693042994 3191866128 6 d-25     /
      data bm12cs( 28) / +.1205591357 8156175353 7472398183 5 d-25     /
      data bm12cs( 29) / -.3884536246 3764880764 3185936112 4 d-26     /
      data bm12cs( 30) / +.1278689528 7204097219 0489528346 1 d-26     /
      data bm12cs( 31) / -.4295146689 4479462720 6193691591 2 d-27     /
      data bm12cs( 32) / +.1470689117 8290708864 5680270798 3 d-27     /
      data bm12cs( 33) / -.5128315665 1060731281 8037401779 6 d-28     /
      data bm12cs( 34) / +.1819509585 4711693854 8143737328 6 d-28     /
      data bm12cs( 35) / -.6563031314 8419808676 1863505037 3 d-29     /
      data bm12cs( 36) / +.2404898976 9199606531 9891487583 4 d-29     /
      data bm12cs( 37) / -.8945966744 6906124732 3495824297 9 d-30     /
      data bm12cs( 38) / +.3376085160 6572310266 3714897824 0 d-30     /
      data bm12cs( 39) / -.1291791454 6206563609 1309991696 6 d-30     /
      data bm12cs( 40) / +.5008634462 9588105206 8495150125 4 d-31     /
c
c series for bth1       on the interval  0.          to  1.56250e-02
c                                        with weighted error   2.82e-32
c                                         log weighted error  31.55
c                               significant figures required  31.12
c                                    decimal places required  32.37
c
      data bth1cs(  1) / +.7474995720 3587276055 4434839696 95 d+0     /
      data bth1cs(  2) / -.1240077714 4651711252 5457775413 84 d-2     /
      data bth1cs(  3) / +.9925244240 4424527376 6414976895 92 d-5     /
      data bth1cs(  4) / -.2030369073 7159711052 4193753756 08 d-6     /
      data bth1cs(  5) / +.7535961770 5690885712 1840175836 29 d-8     /
      data bth1cs(  6) / -.4166161271 5343550107 6300238562 28 d-9     /
      data bth1cs(  7) / +.3070161807 0834890481 2451020912 16 d-10    /
      data bth1cs(  8) / -.2817849963 7605213992 3240088839 24 d-11    /
      data bth1cs(  9) / +.3079069673 9040295476 0281468216 47 d-12    /
      data bth1cs( 10) / -.3880330026 2803434112 7873475547 81 d-13    /
      data bth1cs( 11) / +.5509603960 8630904934 5617262085 62 d-14    /
      data bth1cs( 12) / -.8659006076 8383779940 1033989539 94 d-15    /
      data bth1cs( 13) / +.1485604914 1536749003 4236890606 83 d-15    /
      data bth1cs( 14) / -.2751952981 5904085805 3712121250 09 d-16    /
      data bth1cs( 15) / +.5455079609 0481089625 0362236409 23 d-17    /
      data bth1cs( 16) / -.1148653450 1983642749 5436310271 77 d-17    /
      data bth1cs( 17) / +.2553521337 7973900223 1990525335 22 d-18    /
      data bth1cs( 18) / -.5962149019 7413450395 7682879078 49 d-19    /
      data bth1cs( 19) / +.1455662290 2372718620 2883020058 33 d-19    /
      data bth1cs( 20) / -.3702218542 2450538201 5797760195 93 d-20    /
      data bth1cs( 21) / +.9776307412 5345357664 1684345179 24 d-21    /
      data bth1cs( 22) / -.2672682163 9668488468 7237753930 52 d-21    /
      data bth1cs( 23) / +.7545330038 4983271794 0381906557 64 d-22    /
      data bth1cs( 24) / -.2194789991 9802744897 8923833716 47 d-22    /
      data bth1cs( 25) / +.6564839462 3955262178 9069998174 93 d-23    /
      data bth1cs( 26) / -.2015560429 8370207570 7840768695 19 d-23    /
      data bth1cs( 27) / +.6341776855 6776143492 1446671856 70 d-24    /
      data bth1cs( 28) / -.2041927788 5337895634 8137699555 91 d-24    /
      data bth1cs( 29) / +.6719146422 0720567486 6589800185 51 d-25    /
      data bth1cs( 30) / -.2256907911 0207573595 7090036873 36 d-25    /
      data bth1cs( 31) / +.7729771989 2989706370 9269598719 29 d-26    /
      data bth1cs( 32) / -.2696744451 2294640913 2114240809 20 d-26    /
      data bth1cs( 33) / +.9574934451 8502698072 2955219336 27 d-27    /
      data bth1cs( 34) / -.3456916844 8890113000 1756808276 27 d-27    /
      data bth1cs( 35) / +.1268123481 7398436504 2119862383 74 d-27    /
      data bth1cs( 36) / -.4723253663 0722639860 4649937134 45 d-28    /
      data bth1cs( 37) / +.1785000847 8186376177 8586197964 17 d-28    /
      data bth1cs( 38) / -.6840436100 4510395406 2152235667 46 d-29    /
      data bth1cs( 39) / +.2656602867 1720419358 2934226722 12 d-29    /
      data bth1cs( 40) / -.1045040252 7914452917 7141614846 70 d-29    /
      data bth1cs( 41) / +.4161829082 5377144306 8619171970 64 d-30    /
      data bth1cs( 42) / -.1677163920 3643714856 5013478828 87 d-30    /
      data bth1cs( 43) / +.6836199777 6664389173 5359280285 28 d-31    /
      data bth1cs( 44) / -.2817224786 1233641166 7395746228 10 d-31    /
c
      data pi4 / 0.7853981633 9744830961 5660845819 876 d0 /
      data nbm1, nbt12, nbm12, nbth1, xmax / 4*0, 0.d0 /
c
      if (nbm1.ne.0) go to 10
      eta = 0.1d0*d1mach(3)
      nbm1 = initds (bm1cs, 37, eta)
      nbt12 = initds (bt12cs, 39, eta)
      nbm12 = initds (bm12cs, 40, eta)
      nbth1 = initds (bth1cs, 44, eta)
c
      xmax = 1.0d0/d1mach(4)
c
   10 if (x.lt.4.d0) call errmsg('D9B1MP:  x must be ge 4',2)
c
      if (x.gt.8.d0) go to 20
      z = (128.d0/(x*x) - 5.d0)/3.d0
      ampl = (0.75d0 + dcsevl (z, bm1cs, nbm1))/dsqrt(x)
      theta = x - 3.d0*pi4 + dcsevl (z, bt12cs, nbt12)/x
      return
c
   20 if (x.gt.xmax) call errmsg('D9B1MP:  x is too big',2)
c
      z = 128.d0/(x*x) - 1.d0
      ampl = (0.75d0 + dcsevl (z, bm12cs, nbm12))/dsqrt(x)
      theta = x - 3.d0*pi4 + dcsevl (z, bth1cs, nbth1)/x
c
      end

